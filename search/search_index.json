{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Babelcomics4 - Gestor de Colecci\u00f3n de Comics","text":"<p>Babelcomics4 es un gestor completo de colecciones de comics desarrollado en Python con GTK4 y libadwaita. Permite organizar, catalogar y gestionar tu colecci\u00f3n de comics digitales con integraci\u00f3n directa a ComicVine API.</p>"},{"location":"#caracteristicas-principales","title":"\ud83d\ude80 Caracter\u00edsticas Principales","text":""},{"location":"#gestion-completa","title":"\ud83d\udcda Gesti\u00f3n Completa","text":"<ul> <li>Comics Digitales: Soporte para archivos CBZ, CBR y formatos de imagen</li> <li>Metadatos: Informaci\u00f3n detallada de cada comic con integraci\u00f3n ComicVine</li> <li>Thumbnails: Generaci\u00f3n autom\u00e1tica de miniaturas con efectos visuales</li> <li>B\u00fasqueda Avanzada: Filtros potentes por clasificaci\u00f3n, calidad, a\u00f1o, etc.</li> </ul>"},{"location":"#interfaz-moderna","title":"\ud83c\udfa8 Interfaz Moderna","text":"<ul> <li>GTK4 + libadwaita: Interfaz nativa y moderna</li> <li>Navegaci\u00f3n Fluida: NavigationView con p\u00e1ginas de detalle</li> <li>Modo Oscuro: Soporte completo para temas claros y oscuros</li> <li>Responsive: Adaptable a diferentes tama\u00f1os de pantalla</li> </ul>"},{"location":"#integracion-comicvine","title":"\ud83d\udd17 Integraci\u00f3n ComicVine","text":"<ul> <li>API Oficial: Conexi\u00f3n directa con la base de datos ComicVine</li> <li>Actualizaci\u00f3n Autom\u00e1tica: Descarga de metadatos e im\u00e1genes en segundo plano</li> <li>Threading: Descargas concurrentes sin bloquear la interfaz</li> <li>Cache Inteligente: Sistema de cache para optimizar rendimiento</li> </ul>"},{"location":"#base-de-datos-robusta","title":"\ud83d\uddc3\ufe0f Base de Datos Robusta","text":"<ul> <li>SQLAlchemy ORM: Gesti\u00f3n avanzada de datos relacionales</li> <li>Modelos Estructurados: Comics, Vol\u00famenes, Editoriales y m\u00e1s</li> <li>Migraci\u00f3n Autom\u00e1tica: Actualizaciones de esquema sin p\u00e9rdida de datos</li> <li>Backup Autom\u00e1tico: Protecci\u00f3n de tu colecci\u00f3n</li> </ul>"},{"location":"#funcionalidades-destacadas","title":"\ud83c\udfaf Funcionalidades Destacadas","text":""},{"location":"#catalogacion-inteligente","title":"Catalogaci\u00f3n Inteligente","text":"<ul> <li>Escaneo autom\u00e1tico de directorios</li> <li>Detecci\u00f3n de metadatos por nombre de archivo</li> <li>Asociaci\u00f3n autom\u00e1tica con vol\u00famenes ComicVine</li> <li>Generaci\u00f3n de thumbnails en tiempo real</li> </ul>"},{"location":"#filtros-avanzados","title":"Filtros Avanzados","text":"<ul> <li>Clasificaci\u00f3n: Distingue entre comics catalogados y sin catalogar</li> <li>Visual: Thumbnails en escala de grises para issues sin f\u00edsicos</li> <li>Calidad: Sistema de puntuaci\u00f3n por estrellas</li> <li>Estado: Exclusi\u00f3n de elementos en papelera</li> </ul>"},{"location":"#gestion-de-volumenes","title":"Gesti\u00f3n de Vol\u00famenes","text":"<ul> <li>Vista detallada con lista de issues</li> <li>Bot\u00f3n de actualizaci\u00f3n ComicVine</li> <li>Informaci\u00f3n de completitud de colecci\u00f3n</li> <li>Navegaci\u00f3n fluida entre vol\u00famenes e issues</li> </ul>"},{"location":"#estadisticas-del-proyecto","title":"\ud83d\udcca Estad\u00edsticas del Proyecto","text":"<pre><code>\ud83d\udcc1 Estructura del Proyecto\n\u251c\u2500\u2500 \ud83d\udc0d Python Backend (SQLAlchemy + ComicVine API)\n\u251c\u2500\u2500 \ud83d\udda5\ufe0f GTK4/libadwaita Frontend\n\u251c\u2500\u2500 \ud83d\uddc4\ufe0f Sistema de Repositorios\n\u251c\u2500\u2500 \ud83d\uddbc\ufe0f Generador de Thumbnails\n\u251c\u2500\u2500 \ud83d\udd0d Motor de B\u00fasqueda\n\u2514\u2500\u2500 \ud83d\udcda Documentaci\u00f3n MkDocs\n</code></pre>"},{"location":"#tecnologias-utilizadas","title":"\ud83d\udee0\ufe0f Tecnolog\u00edas Utilizadas","text":"<ul> <li>Python 3.13: Lenguaje principal</li> <li>GTK4: Toolkit de interfaz gr\u00e1fica</li> <li>libadwaita: Componentes modernos de GNOME</li> <li>SQLAlchemy: ORM para base de datos</li> <li>Pillow: Procesamiento de im\u00e1genes</li> <li>Requests: Cliente HTTP para ComicVine API</li> <li>Threading: Concurrencia y paralelismo</li> </ul>"},{"location":"#guia-rapida","title":"\ud83d\udcd6 Gu\u00eda R\u00e1pida","text":"<ol> <li>Instalaci\u00f3n: Configura tu entorno de desarrollo</li> <li>Primeros Pasos: Aprende lo b\u00e1sico</li> <li>Gesti\u00f3n de Comics: Organiza tu colecci\u00f3n</li> <li>ComicVine: Conecta con la API</li> <li>Filtros: Encuentra comics espec\u00edficos</li> </ol>"},{"location":"#capturas-de-pantalla","title":"\ud83c\udfa8 Capturas de Pantalla","text":""},{"location":"#vista-principal","title":"Vista Principal","text":"<p>La interfaz principal muestra tu colecci\u00f3n con thumbnails generados autom\u00e1ticamente:</p> <ul> <li>Vista de grid responsiva</li> <li>Informaci\u00f3n b\u00e1sica de cada comic</li> <li>Estado visual (clasificado/sin clasificar)</li> <li>B\u00fasqueda en tiempo real</li> </ul>"},{"location":"#detalle-de-volumen","title":"Detalle de Volumen","text":"<p>Navegaci\u00f3n completa por vol\u00famenes con:</p> <ul> <li>Lista de todos los issues</li> <li>Bot\u00f3n de actualizaci\u00f3n ComicVine</li> <li>Informaci\u00f3n de metadatos</li> <li>Estad\u00edsticas de colecci\u00f3n</li> </ul>"},{"location":"#filtros-avanzados_1","title":"Filtros Avanzados","text":"<p>Sistema de filtrado potente:</p> <ul> <li>Clasificaci\u00f3n (catalogados/sin catalogar)</li> <li>Rango de calidad (1-5 estrellas)</li> <li>Exclusi\u00f3n de papelera</li> <li>M\u00faltiples criterios combinables</li> </ul>"},{"location":"#contribuir","title":"\ud83e\udd1d Contribuir","text":"<p>Este proyecto est\u00e1 en desarrollo activo. Las contribuciones son bienvenidas:</p> <ol> <li>Fork del repositorio</li> <li>Crear rama de feature</li> <li>Implementar mejoras</li> <li>Tests y documentaci\u00f3n</li> <li>Pull request</li> </ol>"},{"location":"#licencia","title":"\ud83d\udcdd Licencia","text":"<p>Proyecto desarrollado para gesti\u00f3n personal de colecciones de comics digitales.</p> <p>\u00bfListo para empezar? \ud83d\udc49 Instalaci\u00f3n</p>"},{"location":"desarrollo/arquitectura/","title":"Arquitectura del Sistema","text":"<p>Babelcomics4 est\u00e1 dise\u00f1ado con una arquitectura modular y escalable que separa claramente la l\u00f3gica de negocio, el acceso a datos y la presentaci\u00f3n.</p>"},{"location":"desarrollo/arquitectura/#arquitectura-general","title":"\ud83c\udfd7\ufe0f Arquitectura General","text":""},{"location":"desarrollo/arquitectura/#diagrama-de-capas","title":"Diagrama de Capas","text":"<pre><code>graph TB\n    subgraph \"Presentaci\u00f3n\"\n        A[GTK4/libadwaita UI]\n        B[Navegaci\u00f3n y Vistas]\n        C[Componentes Reutilizables]\n    end\n\n    subgraph \"L\u00f3gica de Negocio\"\n        D[Gestores de Aplicaci\u00f3n]\n        E[Servicios ComicVine]\n        F[Procesadores de Im\u00e1genes]\n    end\n\n    subgraph \"Acceso a Datos\"\n        G[Repositorios]\n        H[Modelos SQLAlchemy]\n        I[Migraciones Alembic]\n    end\n\n    subgraph \"Persistencia\"\n        J[SQLite Database]\n        K[Sistema de Archivos]\n        L[Cache de Thumbnails]\n    end\n\n    A --&gt; D\n    B --&gt; D\n    C --&gt; D\n    D --&gt; G\n    E --&gt; G\n    F --&gt; K\n    G --&gt; H\n    H --&gt; J\n    G --&gt; I\n    I --&gt; J\n    F --&gt; L\n</code></pre>"},{"location":"desarrollo/arquitectura/#principios-de-diseno","title":"Principios de Dise\u00f1o","text":""},{"location":"desarrollo/arquitectura/#1-separacion-de-responsabilidades","title":"1. Separaci\u00f3n de Responsabilidades","text":"<ul> <li>UI: Solo manejo de interfaz y eventos</li> <li>L\u00f3gica: Procesamiento y reglas de negocio</li> <li>Datos: Acceso y persistencia</li> </ul>"},{"location":"desarrollo/arquitectura/#2-inversion-de-dependencias","title":"2. Inversi\u00f3n de Dependencias","text":"<ul> <li>Las capas superiores dependen de abstracciones</li> <li>Uso de patrones Repository y Service</li> </ul>"},{"location":"desarrollo/arquitectura/#3-modularidad","title":"3. Modularidad","text":"<ul> <li>Componentes independientes y reutilizables</li> <li>Bajo acoplamiento entre m\u00f3dulos</li> </ul>"},{"location":"desarrollo/arquitectura/#4-escalabilidad","title":"4. Escalabilidad","text":"<ul> <li>Threading para operaciones pesadas</li> <li>Cache eficiente de recursos</li> <li>Paginaci\u00f3n de datos</li> </ul>"},{"location":"desarrollo/arquitectura/#estructura-del-proyecto","title":"\ud83d\udcc1 Estructura del Proyecto","text":""},{"location":"desarrollo/arquitectura/#organizacion-de-directorios","title":"Organizaci\u00f3n de Directorios","text":"<pre><code>Babelcomics4/\n\u251c\u2500\u2500 \ud83d\udcc4 Babelcomic4.py                 # Aplicaci\u00f3n principal y UI\n\u251c\u2500\u2500 \ud83d\udcc1 entidades/                     # Modelos de dominio\n\u2502   \u251c\u2500\u2500 __init__.py                   # Configuraci\u00f3n SQLAlchemy\n\u2502   \u251c\u2500\u2500 comicbook_model.py            # Modelo Comic\n\u2502   \u251c\u2500\u2500 comicbook_info_model.py       # Modelo Issue/Metadata\n\u2502   \u251c\u2500\u2500 comicbook_info_cover_model.py # Modelo Cover\n\u2502   \u251c\u2500\u2500 volume_model.py               # Modelo Volume\n\u2502   \u2514\u2500\u2500 publisher_model.py            # Modelo Publisher\n\u251c\u2500\u2500 \ud83d\udcc1 repositories/                  # Capa de acceso a datos\n\u2502   \u251c\u2500\u2500 base_repository_gtk4.py       # Repositorio base\n\u2502   \u251c\u2500\u2500 comicbook_repository_gtk4.py  # Repositorio Comics\n\u2502   \u251c\u2500\u2500 volume_repository.py          # Repositorio Volumes\n\u2502   \u2514\u2500\u2500 publisher_repository.py       # Repositorio Publishers\n\u251c\u2500\u2500 \ud83d\udcc1 helpers/                       # Servicios y utilidades\n\u2502   \u251c\u2500\u2500 comicvine_client.py          # Cliente API ComicVine\n\u2502   \u2514\u2500\u2500 comicvine_helpers.py         # Utilidades ComicVine\n\u251c\u2500\u2500 \ud83d\udcc4 db_manager.py                 # Gestor de base de datos\n\u251c\u2500\u2500 \ud83d\udcc4 thumbnail_generator.py        # Generador de thumbnails\n\u251c\u2500\u2500 \ud83d\udcc4 comic_cards.py               # Componentes UI Cards\n\u251c\u2500\u2500 \ud83d\udcc4 filter_dialog.py             # Di\u00e1logos de filtro\n\u251c\u2500\u2500 \ud83d\udcc4 volume_detail_page.py        # P\u00e1gina detalle volumen\n\u251c\u2500\u2500 \ud83d\udcc4 selectable_card.py           # Componente selecci\u00f3n\n\u251c\u2500\u2500 \ud83d\udcc1 data/                        # Datos y cache\n\u2502   \u251c\u2500\u2500 babelcomics.db              # Base de datos SQLite\n\u2502   \u2514\u2500\u2500 thumbnails/                 # Cache de im\u00e1genes\n\u2514\u2500\u2500 \ud83d\udcc1 images/                      # Recursos est\u00e1ticos\n</code></pre>"},{"location":"desarrollo/arquitectura/#responsabilidades-por-modulo","title":"Responsabilidades por M\u00f3dulo","text":""},{"location":"desarrollo/arquitectura/#capa-de-presentacion","title":"\ud83c\udfa8 Capa de Presentaci\u00f3n","text":"<pre><code># Babelcomic4.py - Aplicaci\u00f3n principal\nclass ComicManagerApp(Adw.Application):\n    \"\"\"Aplicaci\u00f3n principal GTK4/libadwaita\"\"\"\n    - Gesti\u00f3n de ventanas y navegaci\u00f3n\n    - Manejo de eventos de usuario\n    - Coordinaci\u00f3n entre componentes UI\n\n# comic_cards.py - Componentes UI\nclass ComicCard, VolumeCard, PublisherCard:\n    \"\"\"Cards reutilizables para diferentes entidades\"\"\"\n    - Presentaci\u00f3n visual de datos\n    - Interacciones b\u00e1sicas (click, hover)\n    - Carga de thumbnails\n\n# filter_dialog.py - Di\u00e1logos especializados\nclass AdvancedFilterDialog:\n    \"\"\"Interfaz de filtros avanzados\"\"\"\n    - Configuraci\u00f3n de criterios de filtrado\n    - Validaci\u00f3n de entrada\n    - Comunicaci\u00f3n con l\u00f3gica de negocio\n</code></pre>"},{"location":"desarrollo/arquitectura/#capa-de-logica-de-negocio","title":"\ud83e\udde0 Capa de L\u00f3gica de Negocio","text":"<pre><code># db_manager.py - Gesti\u00f3n de datos\nclass DatabaseManager:\n    \"\"\"Coordinador de operaciones de datos\"\"\"\n    - Inicializaci\u00f3n de base de datos\n    - Transacciones complejas\n    - Migraciones de esquema\n\n# thumbnail_generator.py - Procesamiento de im\u00e1genes\nclass ThumbnailGenerator:\n    \"\"\"Generaci\u00f3n y cache de thumbnails\"\"\"\n    - Extracci\u00f3n de im\u00e1genes de comics\n    - Redimensionado y optimizaci\u00f3n\n    - Cache inteligente\n\n# helpers/comicvine_client.py - Integraci\u00f3n externa\nclass ComicVineClient:\n    \"\"\"Cliente para API ComicVine\"\"\"\n    - Autenticaci\u00f3n y rate limiting\n    - B\u00fasqueda y descarga de metadata\n    - Manejo de errores y reintentos\n</code></pre>"},{"location":"desarrollo/arquitectura/#capa-de-acceso-a-datos","title":"\ud83d\udcbe Capa de Acceso a Datos","text":"<pre><code># repositories/base_repository_gtk4.py\nclass BaseRepository:\n    \"\"\"Repositorio base con funcionalidad com\u00fan\"\"\"\n    - Operaciones CRUD b\u00e1sicas\n    - Sistema de filtrado\n    - Paginaci\u00f3n y ordenamiento\n\n# repositories/comicbook_repository_gtk4.py\nclass ComicbookRepository(BaseRepository):\n    \"\"\"Repositorio espec\u00edfico para comics\"\"\"\n    - Consultas complejas de comics\n    - Filtros especializados (clasificaci\u00f3n, calidad)\n    - Joins con entidades relacionadas\n</code></pre>"},{"location":"desarrollo/arquitectura/#modelos-de-datos","title":"\ud83d\uddc3\ufe0f Modelos de Datos","text":""},{"location":"desarrollo/arquitectura/#arquitectura-de-entidades","title":"Arquitectura de Entidades","text":"<p>El sistema utiliza SQLAlchemy ORM con un dise\u00f1o h\u00edbrido que combina datos locales y externos:</p>"},{"location":"desarrollo/arquitectura/#entidades-principales","title":"\ud83d\udcca Entidades Principales","text":"<pre><code># entidades/volume_model.py\nclass Volume(Base):\n    \"\"\"Volumen: Serie o colecci\u00f3n de comics\"\"\"\n    __tablename__ = 'volumens'\n\n    id_volume = Column(Integer, primary_key=True)           # ID interno\n    nombre = Column(String, nullable=False)                 # Nombre de la serie\n    anio_inicio = Column(Integer)                          # A\u00f1o de inicio\n    cantidad_numeros = Column(Integer, default=0)          # N\u00fameros totales\n    id_comicvine = Column(Integer, nullable=True)          # ID externo ComicVine\n\n    # Relaciones\n    comicbookinfos = relationship(\"ComicbookInfo\", back_populates=\"volume\")\n    publisher = relationship(\"Publisher\", back_populates=\"volumes\")\n</code></pre> <pre><code># entidades/comicbook_info_model.py\nclass ComicbookInfo(Base):\n    \"\"\"Issue: N\u00famero individual de una serie\"\"\"\n    __tablename__ = 'comicbooks_info'\n\n    id_comicbook_info = Column(Integer, primary_key=True)   # ID interno\n    id_volume = Column(Integer, ForeignKey('volumens.id_volume'))  # Relaci\u00f3n con volumen\n    numero = Column(String, nullable=False)                 # N\u00famero del issue\n    titulo = Column(String, default='')                    # T\u00edtulo del issue\n    fecha_tapa = Column(Integer)                           # A\u00f1o de publicaci\u00f3n\n    resumen = Column(Text, default='')                     # Descripci\u00f3n\n\n    # NOTA: NO tiene id_comicvine - se identifica por n\u00famero dentro del volumen\n\n    # Relaciones\n    volume = relationship(\"Volume\", back_populates=\"comicbookinfos\")\n    portadas = relationship(\"ComicbookInfoCover\", back_populates=\"comic_info\")\n    owned_comics = relationship(\"Comicbook\", back_populates=\"comicbook_info\")\n</code></pre>"},{"location":"desarrollo/arquitectura/#estrategia-de-integracion-comicvine","title":"\ud83d\udd17 Estrategia de Integraci\u00f3n ComicVine","text":"<p>Filosof\u00eda del Sistema: - \u2705 Vol\u00famenes locales: <code>id_comicvine = NULL</code> \u2192 Creados manualmente, control total del usuario - \u2705 Vol\u00famenes de ComicVine: <code>id_comicvine != NULL</code> \u2192 Sincronizables con API externa</p> <p>Flujo de Relaciones: <pre><code>graph LR\n    A[ComicbookInfo] --&gt;|id_volume| B[Volume]\n    B --&gt;|id_comicvine| C[ComicVine API]\n    C --&gt;|sync data| B\n\n    B1[Volume Local&lt;br/&gt;id_comicvine=NULL] --&gt; D[Control Manual]\n    B2[Volume ComicVine&lt;br/&gt;id_comicvine=12345] --&gt; E[Auto-sync]\n</code></pre></p>"},{"location":"desarrollo/arquitectura/#tipos-de-volumenes","title":"\ud83d\udccb Tipos de Vol\u00famenes","text":"<p>1. Vol\u00famenes de ComicVine <pre><code>-- Ejemplo: Serie oficial catalogada\nINSERT INTO volumens (nombre, id_comicvine, anio_inicio)\nVALUES ('Batman (2016)', 91988, 2016);\n\n-- Issues se sincronizan autom\u00e1ticamente por n\u00famero\nINSERT INTO comicbooks_info (id_volume, numero, titulo)\nVALUES (1, '1', 'I Am Gotham, Part One');\n</code></pre></p> <p>2. Vol\u00famenes Locales <pre><code>-- Ejemplo: Comic indie no catalogado\nINSERT INTO volumens (nombre, id_comicvine, anio_inicio)\nVALUES ('Mi Webcomic Favorito', NULL, 2024);\n\n-- Issues creados manualmente\nINSERT INTO comicbooks_info (id_volume, numero, titulo)\nVALUES (2, '1', 'Primer Episodio');\n</code></pre></p>"},{"location":"desarrollo/arquitectura/#ventajas-de-la-arquitectura","title":"\ud83c\udfaf Ventajas de la Arquitectura","text":"<p>Para Desarrolladores: - \u2705 Relaciones simples y predecibles - \u2705 Queries eficientes (JOIN por id_volume) - \u2705 Extensibilidad sin romper compatibilidad</p> <p>Para Usuarios: - \u2705 Comics oficiales con metadata autom\u00e1tica - \u2705 Comics personales con control total - \u2705 Coexistencia sin conflictos - \u2705 Migraci\u00f3n gradual posible</p>"},{"location":"desarrollo/arquitectura/#operaciones-de-sincronizacion","title":"\ud83d\udd04 Operaciones de Sincronizaci\u00f3n","text":"<pre><code>def sync_volume_from_comicvine(volume):\n    \"\"\"Sincronizar volumen que tiene id_comicvine\"\"\"\n    if not volume.id_comicvine:\n        return  # Solo sincronizar vol\u00famenes de ComicVine\n\n    # 1. Obtener datos actualizados del volumen\n    volume_data = client.get_volume_details(volume.id_comicvine)\n\n    # 2. Obtener lista de issues desde ComicVine\n    cv_issues = client.get_volume_issues(volume.id_comicvine)\n\n    # 3. Crear issues faltantes (match por n\u00famero)\n    for cv_issue in cv_issues:\n        issue_number = str(cv_issue.get('issue_number', ''))\n\n        existing = session.query(ComicbookInfo).filter_by(\n            id_volume=volume.id_volume,\n            numero=issue_number\n        ).first()\n\n        if not existing:\n            create_issue_from_comicvine(volume, cv_issue)\n\ndef find_issue_cover(volume, issue):\n    \"\"\"Encontrar portada de issue usando ComicVine\"\"\"\n    if not volume.id_comicvine:\n        return None  # Volumen local, sin sincronizaci\u00f3n\n\n    # Obtener issues de ComicVine y hacer match por n\u00famero\n    cv_issues = client.get_volume_issues(volume.id_comicvine)\n\n    for cv_issue in cv_issues:\n        if str(cv_issue.get('issue_number', '')) == issue.numero:\n            return cv_issue.get('image', {}).get('original_url')\n\n    return None\n</code></pre>"},{"location":"desarrollo/arquitectura/#flujos-de-datos","title":"\ud83d\udd04 Flujos de Datos","text":""},{"location":"desarrollo/arquitectura/#flujo-de-visualizacion","title":"Flujo de Visualizaci\u00f3n","text":"<pre><code>sequenceDiagram\n    participant UI as UI Components\n    participant App as ComicManagerApp\n    participant Repo as Repository\n    participant DB as Database\n\n    UI-&gt;&gt;App: User requests data\n    App-&gt;&gt;Repo: get_filtered_comics()\n    Repo-&gt;&gt;DB: SELECT with filters\n    DB--&gt;&gt;Repo: Raw data\n    Repo--&gt;&gt;App: Entity objects\n    App-&gt;&gt;UI: Update views\n    UI-&gt;&gt;UI: Render cards\n</code></pre>"},{"location":"desarrollo/arquitectura/#flujo-de-comicvine","title":"Flujo de ComicVine","text":"<pre><code>sequenceDiagram\n    participant UI as Volume Detail\n    participant App as ComicManagerApp\n    participant CV as ComicVine Client\n    participant TG as Thumbnail Generator\n    participant DB as Database\n\n    UI-&gt;&gt;App: Update from ComicVine\n    App-&gt;&gt;CV: get_volume_issues()\n    CV--&gt;&gt;App: Issue metadata\n    App-&gt;&gt;DB: Create new issues\n    App-&gt;&gt;TG: Download covers\n    TG-&gt;&gt;TG: Process images\n    TG--&gt;&gt;App: Thumbnails ready\n    App-&gt;&gt;UI: Refresh view\n</code></pre>"},{"location":"desarrollo/arquitectura/#flujo-de-threading","title":"Flujo de Threading","text":"<pre><code>graph LR\n    A[UI Thread] --&gt; B[Request Operation]\n    B --&gt; C[Background Thread]\n    C --&gt; D[Heavy Processing]\n    D --&gt; E[GLib.idle_add]\n    E --&gt; F[UI Update]\n    F --&gt; A\n</code></pre>"},{"location":"desarrollo/arquitectura/#patrones-de-diseno","title":"\ud83c\udfaf Patrones de Dise\u00f1o","text":""},{"location":"desarrollo/arquitectura/#1-repository-pattern","title":"1. Repository Pattern","text":""},{"location":"desarrollo/arquitectura/#abstraccion-de-datos","title":"Abstracci\u00f3n de Datos","text":"<pre><code>class BaseRepository:\n    \"\"\"Patr\u00f3n Repository para abstracci\u00f3n de datos\"\"\"\n\n    def obtener_pagina(self, modelo, pagina, tamanio, orden, direccion):\n        \"\"\"Paginaci\u00f3n gen\u00e9rica\"\"\"\n        query = self.session.query(modelo)\n        query = self._apply_filters(query, modelo)\n        query = self._apply_sorting(query, modelo, orden, direccion)\n\n        offset = pagina * tamanio\n        return query.offset(offset).limit(tamanio).all()\n\n    def filtrar(self, **kwargs):\n        \"\"\"Sistema de filtrado flexible\"\"\"\n        self.filtros.update(kwargs)\n</code></pre>"},{"location":"desarrollo/arquitectura/#ventajas","title":"Ventajas","text":"<ul> <li>\u2705 Separaci\u00f3n clara entre l\u00f3gica y datos</li> <li>\u2705 Facilita testing con mocks</li> <li>\u2705 Reutilizaci\u00f3n de consultas comunes</li> <li>\u2705 Abstracci\u00f3n del ORM subyacente</li> </ul>"},{"location":"desarrollo/arquitectura/#2-model-view-controller-mvc","title":"2. Model-View-Controller (MVC)","text":""},{"location":"desarrollo/arquitectura/#separacion-de-responsabilidades","title":"Separaci\u00f3n de Responsabilidades","text":"<pre><code># Model (entidades/)\nclass Comicbook(Base):\n    \"\"\"Modelo de datos puro\"\"\"\n    # Solo definici\u00f3n de estructura y relaciones\n\n# View (UI Components)\nclass ComicCard(Gtk.Widget):\n    \"\"\"Vista pura, solo presentaci\u00f3n\"\"\"\n    # Solo l\u00f3gica de rendering y eventos b\u00e1sicos\n\n# Controller (ComicManagerApp)\nclass ComicManagerApp:\n    \"\"\"Controlador, coordina Model y View\"\"\"\n    # L\u00f3gica de aplicaci\u00f3n, coordina operaciones\n</code></pre>"},{"location":"desarrollo/arquitectura/#3-observer-pattern","title":"3. Observer Pattern","text":""},{"location":"desarrollo/arquitectura/#actualizacion-reactiva","title":"Actualizaci\u00f3n Reactiva","text":"<pre><code>class ThumbnailGenerator:\n    \"\"\"Observable para eventos de thumbnails\"\"\"\n\n    def request_thumbnail(self, path, item_id, item_type, callback):\n        \"\"\"Patr\u00f3n callback para notificaci\u00f3n as\u00edncrona\"\"\"\n        # Procesar en background\n        # Notificar via callback cuando est\u00e9 listo\n\nclass ComicCard:\n    \"\"\"Observer de eventos de thumbnails\"\"\"\n\n    def on_thumbnail_ready(self, thumbnail_path):\n        \"\"\"Callback cuando thumbnail est\u00e1 listo\"\"\"\n        GLib.idle_add(self.update_image, thumbnail_path)\n</code></pre>"},{"location":"desarrollo/arquitectura/#4-factory-pattern","title":"4. Factory Pattern","text":""},{"location":"desarrollo/arquitectura/#creacion-de-cards","title":"Creaci\u00f3n de Cards","text":"<pre><code>class CardFactory:\n    \"\"\"Factory para crear cards seg\u00fan tipo de entidad\"\"\"\n\n    @staticmethod\n    def create_card(item, item_type, thumbnail_generator):\n        if item_type == \"comics\":\n            return ComicCard(item, thumbnail_generator)\n        elif item_type == \"volumes\":\n            return VolumeCard(item, thumbnail_generator)\n        elif item_type == \"publishers\":\n            return PublisherCard(item, thumbnail_generator)\n        else:\n            raise ValueError(f\"Unknown item type: {item_type}\")\n</code></pre>"},{"location":"desarrollo/arquitectura/#gestion-de-concurrencia","title":"\ud83e\uddf5 Gesti\u00f3n de Concurrencia","text":""},{"location":"desarrollo/arquitectura/#threading-model","title":"Threading Model","text":""},{"location":"desarrollo/arquitectura/#hilos-de-la-aplicacion","title":"Hilos de la Aplicaci\u00f3n","text":"<pre><code># 1. Main UI Thread (GTK)\n# - Manejo de eventos UI\n# - Renderizado de componentes\n# - Coordinaci\u00f3n general\n\n# 2. Thumbnail Generation Thread\n# - Procesamiento de im\u00e1genes\n# - Extracci\u00f3n de p\u00e1ginas de comics\n# - Cache de thumbnails\n\n# 3. ComicVine API Threads (Pool)\n# - Requests HTTP concurrentes\n# - Descarga de metadata\n# - Descarga de im\u00e1genes\n</code></pre>"},{"location":"desarrollo/arquitectura/#sincronizacion","title":"Sincronizaci\u00f3n","text":"<pre><code># Comunicaci\u00f3n Thread-Safe\nimport queue\nfrom threading import ThreadPoolExecutor\n\nclass ThumbnailGenerator:\n    def __init__(self):\n        self.thumbnail_queue = queue.Queue()\n        self.executor = ThreadPoolExecutor(max_workers=3)\n\n    def request_thumbnail(self, path, callback):\n        future = self.executor.submit(self._generate_thumbnail, path)\n        future.add_done_callback(\n            lambda f: GLib.idle_add(callback, f.result())\n        )\n</code></pre>"},{"location":"desarrollo/arquitectura/#gestion-de-estado","title":"Gesti\u00f3n de Estado","text":""},{"location":"desarrollo/arquitectura/#estado-de-la-aplicacion","title":"Estado de la Aplicaci\u00f3n","text":"<pre><code>class ApplicationState:\n    \"\"\"Estado centralizado de la aplicaci\u00f3n\"\"\"\n\n    def __init__(self):\n        self.current_view = \"comics\"          # Vista activa\n        self.current_filters = {}             # Filtros aplicados\n        self.search_text = \"\"                 # Texto de b\u00fasqueda\n        self.items_data = []                  # Datos cargados\n        self.loaded_items = 0                 # Paginaci\u00f3n\n        self.selection_mode = False           # Modo selecci\u00f3n\n\n    def clear_filters(self):\n        \"\"\"Limpiar filtros manteniendo vista\"\"\"\n        self.current_filters = {}\n        self.search_text = \"\"\n</code></pre>"},{"location":"desarrollo/arquitectura/#extensibilidad","title":"\ud83d\udd0c Extensibilidad","text":""},{"location":"desarrollo/arquitectura/#puntos-de-extension","title":"Puntos de Extensi\u00f3n","text":""},{"location":"desarrollo/arquitectura/#1-nuevos-tipos-de-cards","title":"1. Nuevos Tipos de Cards","text":"<pre><code>class NewEntityCard(SelectableCard):\n    \"\"\"Nueva card para tipo de entidad personalizada\"\"\"\n\n    def __init__(self, item, thumbnail_generator):\n        super().__init__()\n        self.setup_ui()\n\n    def request_thumbnail(self):\n        \"\"\"Implementar l\u00f3gica espec\u00edfica de thumbnails\"\"\"\n        pass\n</code></pre>"},{"location":"desarrollo/arquitectura/#2-nuevos-repositorios","title":"2. Nuevos Repositorios","text":"<pre><code>class CustomRepository(BaseRepository):\n    \"\"\"Repositorio para nueva entidad\"\"\"\n\n    def __init__(self, session):\n        super().__init__(session)\n\n    def custom_query(self, **kwargs):\n        \"\"\"Consultas espec\u00edficas del dominio\"\"\"\n        pass\n</code></pre>"},{"location":"desarrollo/arquitectura/#3-nuevos-servicios-externos","title":"3. Nuevos Servicios Externos","text":"<pre><code>class AlternativeAPIClient:\n    \"\"\"Cliente para API alternativa a ComicVine\"\"\"\n\n    def search_volumes(self, query):\n        \"\"\"Implementar b\u00fasqueda en API alternativa\"\"\"\n        pass\n</code></pre>"},{"location":"desarrollo/arquitectura/#configurabilidad","title":"Configurabilidad","text":"<pre><code># config.py - Configuraci\u00f3n centralizada\nclass Config:\n    DATABASE_URL = \"sqlite:///data/babelcomics.db\"\n    THUMBNAIL_SIZE = (200, 300)\n    COMICVINE_API_URL = \"https://comicvine.gamespot.com/api\"\n    CACHE_EXPIRY_DAYS = 30\n    MAX_CONCURRENT_DOWNLOADS = 5\n</code></pre>"},{"location":"desarrollo/arquitectura/#metricas-y-monitoreo","title":"\ud83d\udcca M\u00e9tricas y Monitoreo","text":""},{"location":"desarrollo/arquitectura/#logging","title":"Logging","text":"<pre><code>import logging\n\n# Configuraci\u00f3n de logging por m\u00f3dulo\nlogging.basicConfig(\n    level=logging.INFO,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\n\n# Loggers espec\u00edficos\ndb_logger = logging.getLogger('database')\napi_logger = logging.getLogger('comicvine')\nui_logger = logging.getLogger('ui')\n</code></pre>"},{"location":"desarrollo/arquitectura/#metricas-de-performance","title":"M\u00e9tricas de Performance","text":"<pre><code>import time\nimport functools\n\ndef monitor_performance(func):\n    \"\"\"Decorator para monitorear performance\"\"\"\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        start_time = time.time()\n        result = func(*args, **kwargs)\n        execution_time = time.time() - start_time\n\n        logger.info(f\"{func.__name__} executed in {execution_time:.2f}s\")\n        return result\n    return wrapper\n</code></pre>"},{"location":"desarrollo/arquitectura/#manejo-de-errores","title":"\ud83d\udee1\ufe0f Manejo de Errores","text":""},{"location":"desarrollo/arquitectura/#estrategia-de-errores","title":"Estrategia de Errores","text":"<pre><code># Jerarqu\u00eda de excepciones\nclass BabelcomicsError(Exception):\n    \"\"\"Base exception para errores de la aplicaci\u00f3n\"\"\"\n    pass\n\nclass DatabaseError(BabelcomicsError):\n    \"\"\"Errores relacionados con base de datos\"\"\"\n    pass\n\nclass ComicVineError(BabelcomicsError):\n    \"\"\"Errores de integraci\u00f3n ComicVine\"\"\"\n    pass\n\nclass ThumbnailError(BabelcomicsError):\n    \"\"\"Errores de generaci\u00f3n de thumbnails\"\"\"\n    pass\n</code></pre>"},{"location":"desarrollo/arquitectura/#recuperacion-graceful","title":"Recuperaci\u00f3n Graceful","text":"<pre><code>def safe_operation(func, fallback=None, log_error=True):\n    \"\"\"Wrapper para operaciones que pueden fallar\"\"\"\n    try:\n        return func()\n    except Exception as e:\n        if log_error:\n            logger.error(f\"Error in {func.__name__}: {e}\")\n        return fallback\n</code></pre> <p>\u00bfQuieres profundizar en los modelos de datos? \ud83d\udc49 Modelos de Datos</p>"},{"location":"funcionalidades/catalogacion/","title":"Sistema de Catalogaci\u00f3n","text":"<p>El sistema de catalogaci\u00f3n de Babelcomics4 automatiza la organizaci\u00f3n y enriquecimiento de metadata de tu colecci\u00f3n de comics, integr\u00e1ndose con ComicVine para obtener informaci\u00f3n completa y precisa.</p>"},{"location":"funcionalidades/catalogacion/#objetivos-del-sistema","title":"\ud83c\udfaf Objetivos del Sistema","text":""},{"location":"funcionalidades/catalogacion/#automatizacion-inteligente","title":"Automatizaci\u00f3n Inteligente","text":"<ul> <li>Detecci\u00f3n autom\u00e1tica de comics en directorios</li> <li>Extracci\u00f3n de metadata desde nombres de archivo</li> <li>Asociaci\u00f3n inteligente con base de datos ComicVine</li> <li>Enriquecimiento progresivo de informaci\u00f3n</li> </ul>"},{"location":"funcionalidades/catalogacion/#gestion-eficiente","title":"Gesti\u00f3n Eficiente","text":"<ul> <li>Catalogaci\u00f3n en lote para grandes colecciones</li> <li>Actualizaci\u00f3n incremental de metadata</li> <li>Resoluci\u00f3n de conflictos autom\u00e1tica</li> <li>Backup y recuperaci\u00f3n de datos</li> </ul>"},{"location":"funcionalidades/catalogacion/#flujo-de-catalogacion","title":"\ud83d\udd04 Flujo de Catalogaci\u00f3n","text":""},{"location":"funcionalidades/catalogacion/#proceso-completo","title":"Proceso Completo","text":"<pre><code>graph TB\n    A[Escaneo de Archivos] --&gt; B[Detecci\u00f3n de Formato]\n    B --&gt; C[Extracci\u00f3n de Metadata B\u00e1sica]\n    C --&gt; D[B\u00fasqueda en ComicVine]\n    D --&gt; E[Asociaci\u00f3n con Issues]\n    E --&gt; F[Descarga de Portadas]\n    F --&gt; G[Actualizaci\u00f3n en BD]\n    G --&gt; H[Generaci\u00f3n de Thumbnails]\n    H --&gt; I[Actualizaci\u00f3n de UI]\n</code></pre>"},{"location":"funcionalidades/catalogacion/#etapas-detalladas","title":"Etapas Detalladas","text":""},{"location":"funcionalidades/catalogacion/#1-escaneo-y-deteccion","title":"1. Escaneo y Detecci\u00f3n","text":"<pre><code>def scan_directory_for_comics(directory_path):\n    \"\"\"Escanear directorio buscando comics\"\"\"\n\n    supported_extensions = ['.cbz', '.cbr', '.pdf']\n    comic_files = []\n\n    for root, dirs, files in os.walk(directory_path):\n        for file in files:\n            if any(file.lower().endswith(ext) for ext in supported_extensions):\n                full_path = os.path.join(root, file)\n                comic_files.append({\n                    'path': full_path,\n                    'filename': file,\n                    'size': os.path.getsize(full_path),\n                    'modified': os.path.getmtime(full_path)\n                })\n\n    return comic_files\n</code></pre>"},{"location":"funcionalidades/catalogacion/#2-extraccion-de-metadata","title":"2. Extracci\u00f3n de Metadata","text":"<pre><code>def extract_metadata_from_filename(filename):\n    \"\"\"Extraer informaci\u00f3n del nombre de archivo\"\"\"\n\n    patterns = [\n        # Superman #123 (2018).cbz\n        r'(.+?)\\s*#(\\d+)\\s*\\((\\d{4})\\)',\n\n        # Batman - Issue 45 - Title.cbz\n        r'(.+?)\\s*-\\s*Issue\\s*(\\d+)\\s*-\\s*(.+)',\n\n        # Spider-Man_001_Amazing.cbz\n        r'(.+?)_(\\d+)_(.+)',\n\n        # ActionComics123.cbr\n        r'([A-Za-z\\s]+)(\\d+)',\n    ]\n\n    metadata = {\n        'series': None,\n        'issue_number': None,\n        'year': None,\n        'title': None\n    }\n\n    for pattern in patterns:\n        match = re.match(pattern, filename)\n        if match:\n            groups = match.groups()\n            metadata['series'] = groups[0].strip()\n            metadata['issue_number'] = groups[1]\n\n            if len(groups) &gt; 2:\n                if groups[2].isdigit() and len(groups[2]) == 4:\n                    metadata['year'] = int(groups[2])\n                else:\n                    metadata['title'] = groups[2].strip()\n\n            break\n\n    return metadata\n</code></pre>"},{"location":"funcionalidades/catalogacion/#3-busqueda-en-comicvine","title":"3. B\u00fasqueda en ComicVine","text":"<pre><code>def search_comicvine_for_comic(metadata):\n    \"\"\"Buscar comic en ComicVine usando metadata extra\u00edda\"\"\"\n\n    client = ComicVineClient()\n\n    # 1. Buscar vol\u00famenes por nombre de serie\n    volume_results = client.search_volumes(metadata['series'])\n\n    # 2. Filtrar por a\u00f1o si disponible\n    if metadata['year']:\n        volume_results = [\n            v for v in volume_results\n            if abs(int(v.get('start_year', 0)) - metadata['year']) &lt;= 2\n        ]\n\n    # 3. Para cada volumen candidato, buscar issue espec\u00edfico\n    for volume in volume_results[:3]:  # Top 3 candidatos\n        issues = client.get_volume_issues(volume['id'])\n\n        for issue in issues:\n            if issue['issue_number'] == metadata['issue_number']:\n                return {\n                    'volume': volume,\n                    'issue': issue,\n                    'confidence': calculate_match_confidence(metadata, volume, issue)\n                }\n\n    return None\n</code></pre>"},{"location":"funcionalidades/catalogacion/#4-asociacion-inteligente","title":"4. Asociaci\u00f3n Inteligente","text":"<pre><code>def create_comicbook_info_from_comicvine(issue_data, volume_data):\n    \"\"\"Crear registro ComicbookInfo desde datos ComicVine\"\"\"\n\n    comicbook_info = ComicbookInfo(\n        titulo=issue_data.get('name', ''),\n        numero=str(issue_data.get('issue_number', '')),\n        fecha_tapa=parse_cover_date(issue_data.get('cover_date')),\n        resumen=clean_description(issue_data.get('description', '')),\n        url_api_detalle=issue_data.get('api_detail_url', ''),\n        url_sitio_web=issue_data.get('site_detail_url', ''),\n        calificacion=0.0,  # Inicial, puede ser actualizada\n        id_comicvine=issue_data.get('id'),\n        id_volume=get_or_create_volume(volume_data).id_volume\n    )\n\n    # Crear entrada de portada si hay imagen\n    if issue_data.get('image'):\n        cover = ComicbookInfoCover(\n            url_imagen=issue_data['image']['original_url'],\n            comic_info=comicbook_info\n        )\n        comicbook_info.portadas.append(cover)\n\n    return comicbook_info\n</code></pre>"},{"location":"funcionalidades/catalogacion/#inteligencia-de-catalogacion","title":"\ud83e\udde0 Inteligencia de Catalogaci\u00f3n","text":""},{"location":"funcionalidades/catalogacion/#algoritmos-de-coincidencia","title":"Algoritmos de Coincidencia","text":""},{"location":"funcionalidades/catalogacion/#calculo-de-confianza","title":"C\u00e1lculo de Confianza","text":"<pre><code>def calculate_match_confidence(extracted_metadata, volume, issue):\n    \"\"\"Calcular confianza de coincidencia (0.0 - 1.0)\"\"\"\n\n    confidence = 0.0\n\n    # Coincidencia de nombre de serie (peso: 40%)\n    series_similarity = calculate_string_similarity(\n        extracted_metadata['series'],\n        volume['name']\n    )\n    confidence += series_similarity * 0.4\n\n    # Coincidencia exacta de n\u00famero (peso: 30%)\n    if extracted_metadata['issue_number'] == issue['issue_number']:\n        confidence += 0.3\n\n    # Coincidencia de a\u00f1o (peso: 20%)\n    if extracted_metadata.get('year'):\n        year_diff = abs(\n            extracted_metadata['year'] - int(volume.get('start_year', 0))\n        )\n        year_confidence = max(0, 1 - (year_diff / 5))  # Tolerancia de 5 a\u00f1os\n        confidence += year_confidence * 0.2\n\n    # Coincidencia de t\u00edtulo (peso: 10%)\n    if extracted_metadata.get('title') and issue.get('name'):\n        title_similarity = calculate_string_similarity(\n            extracted_metadata['title'],\n            issue['name']\n        )\n        confidence += title_similarity * 0.1\n\n    return min(confidence, 1.0)\n\ndef calculate_string_similarity(str1, str2):\n    \"\"\"Calcular similitud entre strings usando Levenshtein\"\"\"\n    import difflib\n    return difflib.SequenceMatcher(None, str1.lower(), str2.lower()).ratio()\n</code></pre>"},{"location":"funcionalidades/catalogacion/#resolucion-de-ambiguedades","title":"Resoluci\u00f3n de Ambig\u00fcedades","text":"<pre><code>def resolve_multiple_matches(comic_file, candidates):\n    \"\"\"Resolver cuando hay m\u00faltiples candidatos\"\"\"\n\n    if not candidates:\n        return None\n\n    # Ordenar por confianza\n    candidates.sort(key=lambda x: x['confidence'], reverse=True)\n\n    # Si hay un claro ganador (diferencia &gt; 0.2)\n    if len(candidates) &gt; 1:\n        best = candidates[0]\n        second = candidates[1]\n\n        if best['confidence'] - second['confidence'] &gt; 0.2:\n            return best\n\n    # Si las confianzas son similares, usar criterios adicionales\n    return apply_tiebreaker_criteria(comic_file, candidates)\n\ndef apply_tiebreaker_criteria(comic_file, candidates):\n    \"\"\"Criterios de desempate para candidatos similares\"\"\"\n\n    # 1. Preferir vol\u00famenes m\u00e1s recientes\n    candidates.sort(key=lambda x: x['volume'].get('start_year', 0), reverse=True)\n\n    # 2. Preferir vol\u00famenes de editoriales principales\n    major_publishers = ['DC Comics', 'Marvel Comics', 'Image Comics']\n    for candidate in candidates:\n        if candidate['volume'].get('publisher', {}).get('name') in major_publishers:\n            return candidate\n\n    # 3. Devolver el primero si no hay criterio claro\n    return candidates[0]\n</code></pre>"},{"location":"funcionalidades/catalogacion/#catalogacion-en-lote","title":"Catalogaci\u00f3n en Lote","text":""},{"location":"funcionalidades/catalogacion/#procesamiento-asincrono","title":"Procesamiento As\u00edncrono","text":"<pre><code>class BatchCatalogingManager:\n    \"\"\"Gestor de catalogaci\u00f3n en lote\"\"\"\n\n    def __init__(self, session, comicvine_client):\n        self.session = session\n        self.client = comicvine_client\n        self.progress_callback = None\n        self.error_callback = None\n\n    def catalog_directory(self, directory_path, progress_callback=None):\n        \"\"\"Catalogar directorio completo\"\"\"\n\n        self.progress_callback = progress_callback\n\n        # 1. Escanear archivos\n        comic_files = scan_directory_for_comics(directory_path)\n        total_files = len(comic_files)\n\n        results = {\n            'processed': 0,\n            'cataloged': 0,\n            'errors': [],\n            'skipped': 0\n        }\n\n        for i, comic_file in enumerate(comic_files):\n            try:\n                # Actualizar progreso\n                if self.progress_callback:\n                    self.progress_callback(i + 1, total_files, comic_file['filename'])\n\n                # Verificar si ya existe\n                existing = self.session.query(Comicbook).filter_by(\n                    path=comic_file['path']\n                ).first()\n\n                if existing:\n                    results['skipped'] += 1\n                    continue\n\n                # Procesar archivo\n                success = self.catalog_single_file(comic_file)\n\n                if success:\n                    results['cataloged'] += 1\n                else:\n                    results['skipped'] += 1\n\n                results['processed'] += 1\n\n                # Rate limiting para ComicVine\n                time.sleep(0.5)\n\n            except Exception as e:\n                results['errors'].append({\n                    'file': comic_file['filename'],\n                    'error': str(e)\n                })\n\n        return results\n\n    def catalog_single_file(self, comic_file):\n        \"\"\"Catalogar archivo individual\"\"\"\n\n        # 1. Crear entrada b\u00e1sica de Comicbook\n        comic = Comicbook(\n            path=comic_file['path'],\n            filename=comic_file['filename'],\n            tama\u00f1o=comic_file['size'],\n            id_comicbook_info=''  # Sin catalogar inicialmente\n        )\n\n        self.session.add(comic)\n\n        # 2. Intentar catalogaci\u00f3n autom\u00e1tica\n        metadata = extract_metadata_from_filename(comic_file['filename'])\n\n        if metadata['series'] and metadata['issue_number']:\n            comicvine_match = search_comicvine_for_comic(metadata)\n\n            if comicvine_match and comicvine_match['confidence'] &gt; 0.7:\n                # Crear ComicbookInfo si hay buena coincidencia\n                comicbook_info = create_comicbook_info_from_comicvine(\n                    comicvine_match['issue'],\n                    comicvine_match['volume']\n                )\n\n                self.session.add(comicbook_info)\n                self.session.flush()  # Para obtener ID\n\n                comic.id_comicbook_info = str(comicbook_info.id_comicbook_info)\n\n        self.session.commit()\n        return True\n</code></pre>"},{"location":"funcionalidades/catalogacion/#configuracion-de-catalogacion","title":"\ud83c\udf9b\ufe0f Configuraci\u00f3n de Catalogaci\u00f3n","text":""},{"location":"funcionalidades/catalogacion/#parametros-configurables","title":"Par\u00e1metros Configurables","text":"<pre><code>class CatalogingConfig:\n    \"\"\"Configuraci\u00f3n del sistema de catalogaci\u00f3n\"\"\"\n\n    # Umbrales de confianza\n    AUTO_CATALOG_THRESHOLD = 0.8    # Catalogar autom\u00e1ticamente\n    MANUAL_REVIEW_THRESHOLD = 0.5   # Requerir revisi\u00f3n manual\n    REJECT_THRESHOLD = 0.3          # Rechazar autom\u00e1ticamente\n\n    # L\u00edmites de API\n    COMICVINE_REQUESTS_PER_HOUR = 200\n    REQUEST_DELAY_SECONDS = 0.5\n\n    # Procesamiento\n    MAX_CONCURRENT_CATALOGS = 3\n    BATCH_SIZE = 50\n\n    # Retry logic\n    MAX_RETRIES = 3\n    RETRY_DELAY = 2  # seconds\n\n    # Directivos de calidad\n    REQUIRE_COVER_IMAGE = True\n    REQUIRE_PUBLISHER_INFO = False\n    MINIMUM_DESCRIPTION_LENGTH = 50\n</code></pre>"},{"location":"funcionalidades/catalogacion/#perfiles-de-catalogacion","title":"Perfiles de Catalogaci\u00f3n","text":""},{"location":"funcionalidades/catalogacion/#perfil-conservador","title":"Perfil Conservador","text":"<pre><code>CONSERVATIVE_PROFILE = {\n    'auto_catalog_threshold': 0.9,\n    'require_manual_review': True,\n    'prefer_major_publishers': True,\n    'strict_year_matching': True\n}\n</code></pre>"},{"location":"funcionalidades/catalogacion/#perfil-agresivo","title":"Perfil Agresivo","text":"<pre><code>AGGRESSIVE_PROFILE = {\n    'auto_catalog_threshold': 0.6,\n    'require_manual_review': False,\n    'accept_fuzzy_matches': True,\n    'auto_create_volumes': True\n}\n</code></pre>"},{"location":"funcionalidades/catalogacion/#perfil-balanceado","title":"Perfil Balanceado","text":"<pre><code>BALANCED_PROFILE = {\n    'auto_catalog_threshold': 0.75,\n    'require_manual_review_below': 0.5,\n    'prefer_recent_volumes': True,\n    'validate_issue_numbers': True\n}\n</code></pre>"},{"location":"funcionalidades/catalogacion/#monitoreo-y-estadisticas","title":"\ud83d\udcca Monitoreo y Estad\u00edsticas","text":""},{"location":"funcionalidades/catalogacion/#metricas-de-catalogacion","title":"M\u00e9tricas de Catalogaci\u00f3n","text":"<pre><code>def generate_cataloging_report(session):\n    \"\"\"Generar reporte de estado de catalogaci\u00f3n\"\"\"\n\n    total_comics = session.query(Comicbook).count()\n    cataloged_comics = session.query(Comicbook).filter(\n        Comicbook.id_comicbook_info != ''\n    ).count()\n\n    uncataloged_comics = total_comics - cataloged_comics\n    catalog_percentage = (cataloged_comics / total_comics) * 100\n\n    # Distribuci\u00f3n por editorial\n    publisher_stats = session.query(\n        Volume.id_publisher,\n        func.count(Comicbook.id_comicbook).label('count')\n    ).join(ComicbookInfo).join(Volume).group_by(Volume.id_publisher).all()\n\n    # Distribuci\u00f3n por d\u00e9cada\n    decade_stats = session.query(\n        func.floor(Volume.anio_inicio / 10) * 10,\n        func.count(Comicbook.id_comicbook).label('count')\n    ).join(ComicbookInfo).join(Volume).group_by(\n        func.floor(Volume.anio_inicio / 10) * 10\n    ).all()\n\n    return {\n        'total_comics': total_comics,\n        'cataloged_comics': cataloged_comics,\n        'uncataloged_comics': uncataloged_comics,\n        'catalog_percentage': catalog_percentage,\n        'publisher_distribution': publisher_stats,\n        'decade_distribution': decade_stats\n    }\n</code></pre>"},{"location":"funcionalidades/catalogacion/#dashboard-de-catalogacion","title":"Dashboard de Catalogaci\u00f3n","text":"<pre><code>\u250c\u2500\u2500\u2500 Estado de Catalogaci\u00f3n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                               \u2502\n\u2502 Total de Comics: 1,247                        \u2502\n\u2502 Catalogados: 892 (71.5%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591      \u2502\n\u2502 Sin Catalogar: 355 (28.5%) \u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591      \u2502\n\u2502                                               \u2502\n\u2502 \u00daltima Catalogaci\u00f3n: 2024-03-15 14:30        \u2502\n\u2502 Comics Agregados Hoy: 23                     \u2502\n\u2502 Errores Pendientes: 5                        \u2502\n\u2502                                               \u2502\n\u251c\u2500\u2500\u2500 Distribuci\u00f3n por Editorial \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Marvel Comics: 445 (35.7%)                   \u2502\n\u2502 DC Comics: 312 (25.0%)                       \u2502\n\u2502 Image Comics: 178 (14.3%)                    \u2502\n\u2502 Otros: 312 (25.0%)                           \u2502\n\u2502                                               \u2502\n\u251c\u2500\u2500\u2500 Acciones Disponibles \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 [\ud83d\udd04 Catalogar Pendientes]                    \u2502\n\u2502 [\ud83d\udcca Reporte Detallado]                       \u2502\n\u2502 [\u2699\ufe0f Configurar Perfiles]                     \u2502\n\u2502 [\ud83d\udd0d Revisar Conflictos]                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"funcionalidades/catalogacion/#mantenimiento-y-optimizacion","title":"\ud83d\udee0\ufe0f Mantenimiento y Optimizaci\u00f3n","text":""},{"location":"funcionalidades/catalogacion/#limpieza-de-datos","title":"Limpieza de Datos","text":"<pre><code>def cleanup_catalog_data(session):\n    \"\"\"Limpiar datos inconsistentes de catalogaci\u00f3n\"\"\"\n\n    # 1. Eliminar ComicbookInfo hu\u00e9rfanos\n    orphaned_infos = session.query(ComicbookInfo).filter(\n        ~ComicbookInfo.owned_comics.any()\n    ).all()\n\n    for info in orphaned_infos:\n        session.delete(info)\n\n    # 2. Corregir asociaciones rotas\n    broken_comics = session.query(Comicbook).filter(\n        and_(\n            Comicbook.id_comicbook_info != '',\n            ~session.query(ComicbookInfo).filter(\n                ComicbookInfo.id_comicbook_info == Comicbook.id_comicbook_info\n            ).exists()\n        )\n    ).all()\n\n    for comic in broken_comics:\n        comic.id_comicbook_info = ''\n\n    # 3. Actualizar contadores de vol\u00famenes\n    volumes = session.query(Volume).all()\n    for volume in volumes:\n        issue_count = session.query(ComicbookInfo).filter(\n            ComicbookInfo.id_volume == volume.id_volume\n        ).count()\n        volume.cantidad_numeros = issue_count\n\n    session.commit()\n</code></pre>"},{"location":"funcionalidades/catalogacion/#optimizacion-de-performance","title":"Optimizaci\u00f3n de Performance","text":"<pre><code>def optimize_catalog_queries():\n    \"\"\"Optimizaciones para consultas de catalogaci\u00f3n\"\"\"\n\n    # 1. \u00cdndices para b\u00fasquedas frecuentes\n    CREATE_INDEXES = [\n        \"CREATE INDEX IF NOT EXISTS idx_comicbook_info_volume ON comicbooks_info(id_volume)\",\n        \"CREATE INDEX IF NOT EXISTS idx_comicbook_info_comicvine ON comicbooks_info(id_comicvine)\",\n        \"CREATE INDEX IF NOT EXISTS idx_comicbook_classified ON comicbooks(id_comicbook_info)\",\n        \"CREATE INDEX IF NOT EXISTS idx_volume_publisher ON volumens(id_publisher)\"\n    ]\n\n    # 2. An\u00e1lisis de estad\u00edsticas\n    ANALYZE_TABLES = [\n        \"ANALYZE comicbooks\",\n        \"ANALYZE comicbooks_info\",\n        \"ANALYZE volumens\"\n    ]\n</code></pre> <p>\u00bfQuieres saber m\u00e1s sobre el sistema de thumbnails? \ud83d\udc49 Thumbnails</p>"},{"location":"usuario/comicvine/","title":"Integraci\u00f3n ComicVine","text":"<p>Babelcomics4 incluye integraci\u00f3n completa con la API de ComicVine para automatizar la catalogaci\u00f3n y obtener metadata rica de tu colecci\u00f3n de comics.</p>"},{"location":"usuario/comicvine/#que-es-comicvine","title":"\ud83c\udf10 \u00bfQu\u00e9 es ComicVine?","text":"<p>ComicVine es la base de datos de comics m\u00e1s completa del mundo, mantenida por GameSpot. Incluye:</p> <ul> <li>\ud83d\udcda Vol\u00famenes: Series completas con informaci\u00f3n detallada</li> <li>\ud83d\udcd6 Issues: N\u00fameros individuales con metadata espec\u00edfica</li> <li>\ud83c\udfe2 Publishers: Informaci\u00f3n de editoriales</li> <li>\ud83d\udc65 Personajes: Base de datos de personajes</li> <li>\ud83d\uddbc\ufe0f Im\u00e1genes: Portadas y artwork oficial</li> </ul>"},{"location":"usuario/comicvine/#configuracion-de-api","title":"\ud83d\udd11 Configuraci\u00f3n de API","text":""},{"location":"usuario/comicvine/#obtener-api-key","title":"Obtener API Key","text":"<ol> <li>Crear cuenta en ComicVine</li> <li>Ir a Profile \u2192 API Key</li> <li>Generar nueva clave de API</li> <li>Copiar la clave para configurar en Babelcomics4</li> </ol>"},{"location":"usuario/comicvine/#configurar-en-babelcomics4","title":"Configurar en Babelcomics4","text":""},{"location":"usuario/comicvine/#metodo-1-variable-de-entorno","title":"M\u00e9todo 1: Variable de Entorno","text":"<pre><code># Agregar a ~/.bashrc o ~/.zshrc\nexport COMICVINE_API_KEY=\"tu-clave-de-api-aqui\"\n\n# Recargar terminal\nsource ~/.bashrc\n</code></pre>"},{"location":"usuario/comicvine/#metodo-2-archivo-de-configuracion","title":"M\u00e9todo 2: Archivo de Configuraci\u00f3n","text":"<pre><code># helpers/config.py\nCOMICVINE_API_KEY = \"tu-clave-de-api-aqui\"\n</code></pre>"},{"location":"usuario/comicvine/#metodo-3-ui-de-la-aplicacion-futuro","title":"M\u00e9todo 3: UI de la Aplicaci\u00f3n (Futuro)","text":"<pre><code>\u250c\u2500\u2500\u2500 Configuraci\u00f3n ComicVine \u2500\u2500\u2500\u2510\n\u2502 API Key: [******************] \u2502\n\u2502          [Validar Conexi\u00f3n]   \u2502\n\u2502                               \u2502\n\u2502 \u2705 Conexi\u00f3n exitosa           \u2502\n\u2502 L\u00edmite: 200 req/hora          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/comicvine/#cliente-comicvine","title":"\ud83d\udce1 Cliente ComicVine","text":""},{"location":"usuario/comicvine/#arquitectura-del-cliente","title":"Arquitectura del Cliente","text":"<pre><code># helpers/comicvine_client.py\nclass ComicVineClient:\n    def __init__(self):\n        self.api_key = os.getenv('COMICVINE_API_KEY')\n        self.base_url = 'https://comicvine.gamespot.com/api'\n        self.rate_limit = 200  # requests per hour\n\n    def search_volumes(self, query):\n        \"\"\"Buscar vol\u00famenes por nombre\"\"\"\n\n    def get_volume_details(self, volume_id):\n        \"\"\"Obtener detalles completos de un volumen\"\"\"\n\n    def get_volume_issues(self, volume_id):\n        \"\"\"Obtener todos los issues de un volumen\"\"\"\n\n    def download_image(self, image_url, local_path):\n        \"\"\"Descargar imagen desde ComicVine\"\"\"\n</code></pre>"},{"location":"usuario/comicvine/#limites-de-api","title":"L\u00edmites de API","text":"<pre><code>\u250c\u2500\u2500\u2500 L\u00edmites ComicVine \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2022 200 requests/hora           \u2502\n\u2502 \u2022 1 request/segundo m\u00e1ximo    \u2502\n\u2502 \u2022 Timeout: 30 segundos        \u2502\n\u2502 \u2022 Retry autom\u00e1tico: 3 veces   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/comicvine/#actualizacion-de-volumenes","title":"\ud83d\udd04 Actualizaci\u00f3n de Vol\u00famenes","text":""},{"location":"usuario/comicvine/#flujo-de-actualizacion","title":"Flujo de Actualizaci\u00f3n","text":"<pre><code>graph TB\n    A[Seleccionar Volumen] --&gt; B[Bot\u00f3n Actualizar ComicVine]\n    B --&gt; C[Buscar en API]\n    C --&gt; D[Obtener Issues Nuevos]\n    D --&gt; E[Descargar Metadata]\n    E --&gt; F[Descargar Im\u00e1genes]\n    F --&gt; G[Actualizar BD]\n    G --&gt; H[Refrescar UI]\n</code></pre>"},{"location":"usuario/comicvine/#boton-de-actualizacion","title":"Bot\u00f3n de Actualizaci\u00f3n","text":"<p>En la p\u00e1gina de detalle de cada volumen:</p> <pre><code>\u250c\u2500\u2500\u2500 Acciones del Volumen \u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 [\ud83d\udd04 Actualizar ComicVine]     \u2502\n\u2502                               \u2502\n\u2502 \u2022 Buscar nuevos issues        \u2502\n\u2502 \u2022 Actualizar metadata         \u2502\n\u2502 \u2022 Descargar portadas          \u2502\n\u2502 \u2022 Sincronizar informaci\u00f3n     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/comicvine/#proceso-de-actualizacion","title":"Proceso de Actualizaci\u00f3n","text":""},{"location":"usuario/comicvine/#1-busqueda-en-comicvine","title":"1. B\u00fasqueda en ComicVine","text":"<pre><code>def update_volume_from_comicvine(volume):\n    \"\"\"Actualizar volumen desde ComicVine\"\"\"\n\n    # 1. Buscar por ID de ComicVine\n    if volume.id_comicvine:\n        volume_data = client.get_volume_details(volume.id_comicvine)\n    else:\n        # 2. Buscar por nombre si no hay ID\n        results = client.search_volumes(volume.nombre)\n        volume_data = results[0]  # Mejor coincidencia\n\n    # 3. Obtener lista de issues\n    issues = client.get_volume_issues(volume_data['id'])\n\n    return volume_data, issues\n</code></pre>"},{"location":"usuario/comicvine/#2-creacion-de-issues-faltantes","title":"2. Creaci\u00f3n de Issues Faltantes","text":"<pre><code>for issue_data in issues:\n    # Verificar si el issue ya existe\n    existing = session.query(ComicbookInfo).filter_by(\n        id_volume=volume.id_volume,\n        numero=issue_data['issue_number']\n    ).first()\n\n    if not existing:\n        # Crear nuevo issue\n        new_issue = ComicbookInfo(\n            titulo=issue_data['name'],\n            numero=issue_data['issue_number'],\n            fecha_tapa=parse_date(issue_data['cover_date']),\n            resumen=issue_data['description'],\n            id_comicvine=issue_data['id']\n        )\n        session.add(new_issue)\n</code></pre>"},{"location":"usuario/comicvine/#3-descarga-concurrente-de-imagenes","title":"3. Descarga Concurrente de Im\u00e1genes","text":"<pre><code>def download_covers_in_background(issues, callback):\n    \"\"\"Descargar portadas en segundo plano\"\"\"\n\n    def download_worker():\n        with ThreadPoolExecutor(max_workers=5) as executor:\n            futures = []\n\n            for issue in issues:\n                if issue.portadas and issue.portadas[0].url_imagen:\n                    future = executor.submit(\n                        download_single_cover,\n                        issue.portadas[0].url_imagen,\n                        issue.id_comicbook_info\n                    )\n                    futures.append(future)\n\n            # Esperar a que terminen todas las descargas\n            for future in futures:\n                future.result()\n\n        # Callback en el hilo principal\n        GLib.idle_add(callback)\n\n    # Ejecutar en hilo separado\n    Thread(target=download_worker).start()\n</code></pre>"},{"location":"usuario/comicvine/#gestion-de-imagenes","title":"\ud83d\uddbc\ufe0f Gesti\u00f3n de Im\u00e1genes","text":""},{"location":"usuario/comicvine/#estructura-de-directorios","title":"Estructura de Directorios","text":"<pre><code>data/thumbnails/\n\u251c\u2500\u2500 volumes/                    # Portadas de vol\u00famenes\n\u2502   \u251c\u2500\u2500 12345.jpg              # volume_id.jpg\n\u2502   \u2514\u2500\u2500 67890.jpg\n\u251c\u2500\u2500 comicbookinfo_issues/       # Portadas de issues\n\u2502   \u251c\u2500\u2500 Superman_12345/         # volumen_id_comicvine\n\u2502   \u2502   \u251c\u2500\u2500 issue_001.jpg       # issue_id.jpg\n\u2502   \u2502   \u251c\u2500\u2500 issue_002.jpg\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 Batman_67890/\n\u2514\u2500\u2500 comics/                     # Thumbnails de archivos\n    \u251c\u2500\u2500 1.jpg                   # comic_id.jpg\n    \u2514\u2500\u2500 2.jpg\n</code></pre>"},{"location":"usuario/comicvine/#generacion-de-rutas","title":"Generaci\u00f3n de Rutas","text":"<pre><code>def get_cover_destination_path(volume, issue):\n    \"\"\"Generar ruta de destino para portada de issue\"\"\"\n\n    # Limpiar nombre del volumen\n    clean_name = clean_volume_name(volume.nombre)\n\n    # Crear directorio del volumen\n    volume_dir = f\"{clean_name}_{volume.id_volume}\"\n\n    # Ruta completa\n    return os.path.join(\n        \"data/thumbnails/comicbookinfo_issues\",\n        volume_dir,\n        f\"{issue.id_comicbook_info}-{issue.numero}.jpg\"\n    )\n</code></pre>"},{"location":"usuario/comicvine/#descarga-con-reintentos","title":"Descarga con Reintentos","text":"<pre><code>def download_image_with_retry(url, destination, max_retries=3):\n    \"\"\"Descargar imagen con reintentos autom\u00e1ticos\"\"\"\n\n    for attempt in range(max_retries):\n        try:\n            response = requests.get(url, timeout=30)\n            response.raise_for_status()\n\n            # Crear directorio si no existe\n            os.makedirs(os.path.dirname(destination), exist_ok=True)\n\n            # Guardar imagen\n            with open(destination, 'wb') as f:\n                f.write(response.content)\n\n            return True\n\n        except Exception as e:\n            print(f\"Intento {attempt + 1} fallido: {e}\")\n            if attempt == max_retries - 1:\n                return False\n            time.sleep(2 ** attempt)  # Backoff exponencial\n\n    return False\n</code></pre>"},{"location":"usuario/comicvine/#busqueda-y-asociacion","title":"\ud83d\udd0d B\u00fasqueda y Asociaci\u00f3n","text":""},{"location":"usuario/comicvine/#busqueda-inteligente","title":"B\u00fasqueda Inteligente","text":""},{"location":"usuario/comicvine/#por-nombre-de-archivo","title":"Por Nombre de Archivo","text":"<pre><code>def smart_search_by_filename(filename):\n    \"\"\"B\u00fasqueda inteligente basada en nombre de archivo\"\"\"\n\n    # Extraer informaci\u00f3n del nombre\n    patterns = [\n        r\"(.+?)[-_](\\d+)\",              # Serie-Numero\n        r\"(.+?)\\s+#(\\d+)\",              # Serie #Numero\n        r\"(.+?)\\s+(\\d+)\",               # Serie Numero\n        r\"(.+?)\\.(\\d+)\",                # Serie.Numero\n    ]\n\n    for pattern in patterns:\n        match = re.match(pattern, filename)\n        if match:\n            serie, numero = match.groups()\n\n            # Buscar en ComicVine\n            results = client.search_volumes(serie)\n            return results, numero\n\n    return [], None\n</code></pre>"},{"location":"usuario/comicvine/#asociacion-automatica","title":"Asociaci\u00f3n Autom\u00e1tica","text":"<pre><code>def auto_associate_comic(comic_file):\n    \"\"\"Asociar autom\u00e1ticamente comic con ComicVine\"\"\"\n\n    # 1. Extraer informaci\u00f3n del nombre\n    volume_candidates, issue_number = smart_search_by_filename(\n        comic_file.filename\n    )\n\n    # 2. Filtrar por coincidencia\n    best_match = find_best_volume_match(volume_candidates, comic_file)\n\n    # 3. Buscar issue espec\u00edfico\n    if best_match and issue_number:\n        issues = client.get_volume_issues(best_match['id'])\n        issue_match = find_issue_by_number(issues, issue_number)\n\n        if issue_match:\n            # 4. Crear asociaci\u00f3n\n            return create_comicbook_info(issue_match, comic_file)\n\n    return None\n</code></pre>"},{"location":"usuario/comicvine/#seguimiento-de-progreso","title":"\ud83d\udcca Seguimiento de Progreso","text":""},{"location":"usuario/comicvine/#indicadores-visuales","title":"Indicadores Visuales","text":"<p>Durante la actualizaci\u00f3n:</p> <pre><code>\u250c\u2500\u2500\u2500 Actualizando desde ComicVine \u2500\u2500\u2510\n\u2502                                   \u2502\n\u2502 \ud83d\udd0d Buscando volumen...            \u2502\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 100%        \u2502\n\u2502                                   \u2502\n\u2502 \ud83d\udcd6 Creando 15 issues nuevos...   \u2502\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 50%         \u2502\n\u2502                                   \u2502\n\u2502 \ud83d\uddbc\ufe0f Descargando portadas...        \u2502\n\u2502 \u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 25%         \u2502\n\u2502                                   \u2502\n\u2502 [Cancelar] [Minimizar]           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/comicvine/#mensajes-de-estado","title":"Mensajes de Estado","text":"<pre><code># Ejemplos de mensajes durante actualizaci\u00f3n\nMESSAGES = {\n    'searching': \"\ud83d\udd0d Buscando en ComicVine...\",\n    'found_volume': \"\u2705 Volumen encontrado: {name}\",\n    'fetching_issues': \"\ud83d\udcd6 Obteniendo lista de issues...\",\n    'creating_issues': \"\u2795 Creando {count} issues nuevos...\",\n    'downloading_covers': \"\ud83d\uddbc\ufe0f Descargando {count} portadas...\",\n    'updating_db': \"\ud83d\udcbe Actualizando base de datos...\",\n    'complete': \"\u2705 Actualizaci\u00f3n completada\",\n    'error': \"\u274c Error: {message}\"\n}\n</code></pre>"},{"location":"usuario/comicvine/#casos-de-uso","title":"\ud83c\udfaf Casos de Uso","text":""},{"location":"usuario/comicvine/#1-volumen-nuevo","title":"1. Volumen Nuevo","text":"<pre><code># Agregar volumen manualmente desde ComicVine\nvolume_id = 12345\nvolume_data = client.get_volume_details(volume_id)\n\n# Crear volumen en BD\nnew_volume = Volume(\n    nombre=volume_data['name'],\n    anio_inicio=volume_data['start_year'],\n    cantidad_numeros=volume_data['count_of_issues'],\n    id_comicvine=volume_data['id']\n)\n\n# Crear todos los issues\nissues = client.get_volume_issues(volume_id)\nfor issue_data in issues:\n    create_issue_from_comicvine(issue_data, new_volume)\n</code></pre>"},{"location":"usuario/comicvine/#2-sincronizacion-periodica","title":"2. Sincronizaci\u00f3n Peri\u00f3dica","text":"<pre><code># Actualizar todos los vol\u00famenes con ID ComicVine\nvolumes_to_update = session.query(Volume).filter(\n    Volume.id_comicvine.isnot(None)\n).all()\n\nfor volume in volumes_to_update:\n    try:\n        update_volume_from_comicvine(volume)\n        print(f\"\u2705 {volume.nombre} actualizado\")\n    except Exception as e:\n        print(f\"\u274c Error en {volume.nombre}: {e}\")\n</code></pre>"},{"location":"usuario/comicvine/#3-catalogacion-masiva","title":"3. Catalogaci\u00f3n Masiva","text":"<pre><code># Asociar comics sin clasificar usando ComicVine\nunclassified = session.query(Comicbook).filter(\n    Comicbook.id_comicbook_info == ''\n).all()\n\nfor comic in unclassified:\n    association = auto_associate_comic(comic)\n    if association:\n        comic.id_comicbook_info = association.id_comicbook_info\n        print(f\"\u2705 {comic.filename} \u2192 {association.titulo}\")\n</code></pre>"},{"location":"usuario/comicvine/#manejo-de-errores","title":"\ud83d\udee1\ufe0f Manejo de Errores","text":""},{"location":"usuario/comicvine/#errores-comunes","title":"Errores Comunes","text":"<pre><code>class ComicVineError(Exception):\n    \"\"\"Errores espec\u00edficos de ComicVine\"\"\"\n    pass\n\nclass RateLimitError(ComicVineError):\n    \"\"\"L\u00edmite de requests excedido\"\"\"\n    pass\n\nclass APIKeyError(ComicVineError):\n    \"\"\"API key inv\u00e1lida o faltante\"\"\"\n    pass\n\nclass NetworkError(ComicVineError):\n    \"\"\"Error de conectividad\"\"\"\n    pass\n</code></pre>"},{"location":"usuario/comicvine/#estrategias-de-recuperacion","title":"Estrategias de Recuperaci\u00f3n","text":"<pre><code>def robust_api_call(func, *args, **kwargs):\n    \"\"\"Llamada robusta a la API con manejo de errores\"\"\"\n\n    max_retries = 3\n    backoff_factor = 2\n\n    for attempt in range(max_retries):\n        try:\n            return func(*args, **kwargs)\n\n        except RateLimitError:\n            # Esperar hasta el siguiente per\u00edodo\n            wait_time = 3600  # 1 hora\n            print(f\"L\u00edmite alcanzado, esperando {wait_time}s\")\n            time.sleep(wait_time)\n\n        except NetworkError:\n            # Reintento con backoff exponencial\n            wait_time = backoff_factor ** attempt\n            print(f\"Error de red, reintentando en {wait_time}s\")\n            time.sleep(wait_time)\n\n        except APIKeyError:\n            # Error no recuperable\n            print(\"API key inv\u00e1lida, verificar configuraci\u00f3n\")\n            break\n\n    raise ComicVineError(\"M\u00e1ximo de reintentos alcanzado\")\n</code></pre>"},{"location":"usuario/comicvine/#consejos-de-optimizacion","title":"\ud83d\udca1 Consejos de Optimizaci\u00f3n","text":""},{"location":"usuario/comicvine/#uso-eficiente-de-la-api","title":"Uso Eficiente de la API","text":"<ol> <li>Cache local: Almacenar respuestas para evitar requests duplicados</li> <li>Batch processing: Agrupar operaciones relacionadas</li> <li>Rate limiting: Respetar l\u00edmites de 200 req/hora</li> <li>Requests selectivos: Solo pedir datos necesarios</li> </ol>"},{"location":"usuario/comicvine/#mejores-practicas","title":"Mejores Pr\u00e1cticas","text":"<pre><code># \u2705 Bueno: Request espec\u00edfico\nresponse = client.get_volume_details(\n    volume_id,\n    fields=['name', 'start_year', 'issues']\n)\n\n# \u274c Malo: Request completo innecesario\nresponse = client.get_volume_details(volume_id)  # Todos los campos\n</code></pre> <p>\u00bfListo para dominar la b\u00fasqueda? \ud83d\udc49 Filtros y B\u00fasqueda</p>"},{"location":"usuario/gestion-comics/","title":"Gesti\u00f3n de Comics","text":"<p>Esta gu\u00eda detalla c\u00f3mo importar, organizar y gestionar tu colecci\u00f3n de comics digitales en Babelcomics4.</p>"},{"location":"usuario/gestion-comics/#importacion-de-comics","title":"\ud83d\udce5 Importaci\u00f3n de Comics","text":""},{"location":"usuario/gestion-comics/#formatos-soportados","title":"Formatos Soportados","text":"<p>Babelcomics4 es compatible con los siguientes formatos:</p> <ul> <li>\ud83d\udcd7 CBZ: Comic Book ZIP (recomendado)</li> <li>\ud83d\udcd8 CBR: Comic Book RAR</li> <li>\ud83d\udcd9 PDF: Documentos PDF con comics</li> <li>\ud83d\uddbc\ufe0f Im\u00e1genes: JPG, PNG, WEBP (carpetas)</li> </ul>"},{"location":"usuario/gestion-comics/#metodos-de-importacion","title":"M\u00e9todos de Importaci\u00f3n","text":""},{"location":"usuario/gestion-comics/#1-importacion-automatica-por-escaneo","title":"1. Importaci\u00f3n Autom\u00e1tica por Escaneo","text":"<pre><code># Al iniciar la aplicaci\u00f3n\n# Babelcomics4 escanea autom\u00e1ticamente:\n./Comics/              # Directorio por defecto\n$COMICS_PATH/         # Variable de entorno\n~/Comics/             # Directorio home del usuario\n</code></pre>"},{"location":"usuario/gestion-comics/#2-importacion-manual","title":"2. Importaci\u00f3n Manual","text":"<ol> <li>Men\u00fa Archivo \u2192 Importar Comics</li> <li>Seleccionar directorio con tu colecci\u00f3n</li> <li>Confirmar escaneo recursivo</li> <li>Esperar procesamiento autom\u00e1tico</li> </ol>"},{"location":"usuario/gestion-comics/#3-arrastrar-y-soltar-futuro","title":"3. Arrastrar y Soltar (Futuro)","text":"<ul> <li>Arrastrar archivos desde el explorador</li> <li>Soltar en la ventana de Babelcomics4</li> <li>Procesamiento autom\u00e1tico</li> </ul>"},{"location":"usuario/gestion-comics/#proceso-de-importacion","title":"Proceso de Importaci\u00f3n","text":"<pre><code>graph TB\n    A[Escanear Directorios] --&gt; B[Detectar Archivos]\n    B --&gt; C[Validar Formato]\n    C --&gt; D[Extraer Metadata B\u00e1sica]\n    D --&gt; E[Generar Thumbnail]\n    E --&gt; F[Guardar en BD]\n    F --&gt; G[Mostrar en UI]\n</code></pre>"},{"location":"usuario/gestion-comics/#pasos-detallados","title":"Pasos Detallados","text":"<ol> <li>\ud83d\udd0d Escaneo: B\u00fasqueda recursiva de archivos</li> <li>\u2705 Validaci\u00f3n: Verificaci\u00f3n de formatos soportados</li> <li>\ud83d\udccb Metadata: Extracci\u00f3n de informaci\u00f3n b\u00e1sica:</li> <li>Nombre del archivo</li> <li>Ruta completa</li> <li>Tama\u00f1o del archivo</li> <li>Fecha de modificaci\u00f3n</li> <li>\ud83d\uddbc\ufe0f Thumbnail: Generaci\u00f3n de miniatura:</li> <li>Primera p\u00e1gina del comic</li> <li>Redimensionado autom\u00e1tico</li> <li>Cache para rendimiento</li> <li>\ud83d\udcbe Base de Datos: Almacenamiento en SQLite:</li> <li>Informaci\u00f3n del archivo</li> <li>Estado de clasificaci\u00f3n</li> <li>Metadatos b\u00e1sicos</li> </ol>"},{"location":"usuario/gestion-comics/#organizacion-de-comics","title":"\ud83d\udcda Organizaci\u00f3n de Comics","text":""},{"location":"usuario/gestion-comics/#estados-de-clasificacion","title":"Estados de Clasificaci\u00f3n","text":""},{"location":"usuario/gestion-comics/#comics-clasificados","title":"\ud83c\udf08 Comics Clasificados","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   \ud83d\uddbc\ufe0f Thumbnail  \u2502\n\u2502     (Color)     \u2502\n\u2502                 \u2502\n\u2502 \u2705 Superman #1  \u2502\n\u2502 \ud83d\udcc1 superman.cbz \u2502\n\u2502 \u2b50\u2b50\u2b50\u2b50\u2b50     \u2502\n\u2502 \ud83d\udcd6 DC Comics    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Caracter\u00edsticas: - Thumbnail en color - Metadata completa de ComicVine - Informaci\u00f3n de volumen y n\u00famero - Editorial y fecha de publicaci\u00f3n - Puntuaci\u00f3n de calidad</p>"},{"location":"usuario/gestion-comics/#comics-sin-clasificar","title":"\u26ab Comics Sin Clasificar","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   \ud83d\uddbc\ufe0f Thumbnail  \u2502\n\u2502  (Escala Grises)\u2502\n\u2502                 \u2502\n\u2502 \u274c comic001.cbz \u2502\n\u2502 \ud83d\udcc1 comic001.cbz \u2502\n\u2502 \u2b50 Sin calificar \u2502\n\u2502 \ud83d\udcd6 Sin catalogar\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Caracter\u00edsticas: - Thumbnail en escala de grises - Solo informaci\u00f3n del archivo - Pendiente de catalogaci\u00f3n - Sin metadata de ComicVine</p>"},{"location":"usuario/gestion-comics/#sistema-de-calidad","title":"Sistema de Calidad","text":""},{"location":"usuario/gestion-comics/#puntuacion-por-estrellas","title":"Puntuaci\u00f3n por Estrellas","text":"<pre><code>\u2b50     = 1 - Calidad muy baja\n\u2b50\u2b50   = 2 - Calidad baja\n\u2b50\u2b50\u2b50 = 3 - Calidad media\n\u2b50\u2b50\u2b50\u2b50 = 4 - Calidad buena\n\u2b50\u2b50\u2b50\u2b50\u2b50 = 5 - Calidad excelente\n</code></pre>"},{"location":"usuario/gestion-comics/#criterios-de-calidad","title":"Criterios de Calidad","text":"<ul> <li>Resoluci\u00f3n: Calidad de las im\u00e1genes</li> <li>Completitud: P\u00e1ginas faltantes</li> <li>Compresi\u00f3n: Nivel de compresi\u00f3n</li> <li>Origen: Fuente del escaneo</li> <li>Procesamiento: Limpieza y retoque</li> </ul>"},{"location":"usuario/gestion-comics/#herramientas-de-gestion","title":"\ud83d\udd27 Herramientas de Gesti\u00f3n","text":""},{"location":"usuario/gestion-comics/#edicion-individual","title":"Edici\u00f3n Individual","text":""},{"location":"usuario/gestion-comics/#informacion-basica","title":"Informaci\u00f3n B\u00e1sica","text":"<pre><code>\u250c\u2500\u2500\u2500 Informaci\u00f3n del Comic \u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 T\u00edtulo: [Superman #1        ] \u2502\n\u2502 Archivo: [superman_001.cbz  ] \u2502\n\u2502 Ruta: [/Comics/DC/superman/ ] \u2502\n\u2502 Tama\u00f1o: [45.2 MB           ] \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Clasificaci\u00f3n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Calidad: \u2b50\u2b50\u2b50\u2b50\u2b50         \u2502\n\u2502 Estado: \u2611\ufe0f Clasificado        \u2502\n\u2502 Papelera: \u2610 Eliminado        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/gestion-comics/#metadata-comicvine","title":"Metadata ComicVine","text":"<pre><code>\u250c\u2500\u2500\u2500 Informaci\u00f3n ComicVine \u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 ID Issue: [38686            ] \u2502\n\u2502 Volumen: [Superman (2018)   ] \u2502\n\u2502 N\u00famero: [1                  ] \u2502\n\u2502 Fecha: [2018-07-04         ] \u2502\n\u2502 Editorial: [DC Comics       ] \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/gestion-comics/#acciones-en-lote","title":"Acciones en Lote","text":""},{"location":"usuario/gestion-comics/#seleccion-multiple","title":"Selecci\u00f3n M\u00faltiple","text":"<ol> <li>Activar modo selecci\u00f3n: Click en \ud83d\udcca</li> <li>Seleccionar comics: Click en las cards deseadas</li> <li>Ejecutar acci\u00f3n: Desde men\u00fa contextual</li> </ol>"},{"location":"usuario/gestion-comics/#acciones-disponibles","title":"Acciones Disponibles","text":"<pre><code>\u250c\u2500\u2500\u2500 Acciones en Lote \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\uddd1\ufe0f Mover a Papelera          \u2502\n\u2502 \u2b50 Cambiar Calidad            \u2502\n\u2502 \ud83d\udcdd Editar Informaci\u00f3n         \u2502\n\u2502 \ud83d\udd04 Actualizar ComicVine       \u2502\n\u2502 \ud83d\udcc1 Mover Archivos             \u2502\n\u2502 \ud83c\udff7\ufe0f Aplicar Etiquetas         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/gestion-comics/#gestion-de-papelera","title":"Gesti\u00f3n de Papelera","text":""},{"location":"usuario/gestion-comics/#mover-a-papelera","title":"Mover a Papelera","text":"<pre><code># Los comics no se eliminan f\u00edsicamente\n# Solo se marcan como \"en_papelera = True\"\n# Permanecen en el disco pero ocultos en la UI\n</code></pre>"},{"location":"usuario/gestion-comics/#recuperar-de-papelera","title":"Recuperar de Papelera","text":"<ol> <li>Activar filtros avanzados</li> <li>Incluir elementos en papelera \u2611\ufe0f</li> <li>Seleccionar comics a recuperar</li> <li>Restaurar desde men\u00fa contextual</li> </ol>"},{"location":"usuario/gestion-comics/#sistema-de-thumbnails","title":"\ud83d\uddbc\ufe0f Sistema de Thumbnails","text":""},{"location":"usuario/gestion-comics/#generacion-automatica","title":"Generaci\u00f3n Autom\u00e1tica","text":""},{"location":"usuario/gestion-comics/#proceso-de-generacion","title":"Proceso de Generaci\u00f3n","text":"<pre><code>graph LR\n    A[Archivo Comic] --&gt; B[Extraer Primera P\u00e1gina]\n    B --&gt; C[Redimensionar]\n    C --&gt; D[Aplicar Efectos]\n    D --&gt; E[Guardar Cache]\n</code></pre>"},{"location":"usuario/gestion-comics/#parametros","title":"Par\u00e1metros","text":"<ul> <li>Tama\u00f1o: 200x300 px (proporci\u00f3n preservada)</li> <li>Formato: JPEG con compresi\u00f3n optimizada</li> <li>Cache: Almacenado en <code>data/thumbnails/comics/</code></li> </ul>"},{"location":"usuario/gestion-comics/#efectos-visuales","title":"Efectos Visuales","text":""},{"location":"usuario/gestion-comics/#escala-de-grises-automatica","title":"Escala de Grises Autom\u00e1tica","text":"<pre><code># Comics sin f\u00edsicos \u2192 Escala de grises\nif comic.cantidad_adquirida == 0:\n    thumbnail = convert_to_grayscale(thumbnail)\n\n# Comics con f\u00edsicos \u2192 Color normal\nelse:\n    thumbnail = original_thumbnail\n</code></pre>"},{"location":"usuario/gestion-comics/#procesamiento-con-pillow","title":"Procesamiento con Pillow","text":"<pre><code>def convert_to_grayscale(image):\n    \"\"\"Convierte imagen a escala de grises preservando calidad\"\"\"\n    # Convertir a RGB si es necesario\n    if image.mode in ('RGBA', 'LA'):\n        rgb_image = Image.new('RGB', image.size, (255, 255, 255))\n        rgb_image.paste(image, mask=image.split()[-1])\n    else:\n        rgb_image = image.convert('RGB')\n\n    # Aplicar escala de grises\n    grayscale = rgb_image.convert('L')\n    return grayscale.convert('RGB')\n</code></pre>"},{"location":"usuario/gestion-comics/#busqueda-y-filtrado","title":"\ud83d\udd0d B\u00fasqueda y Filtrado","text":""},{"location":"usuario/gestion-comics/#busqueda-basica","title":"B\u00fasqueda B\u00e1sica","text":"<pre><code>\ud83d\udd0d [Buscar en tu colecci\u00f3n...]\n</code></pre>"},{"location":"usuario/gestion-comics/#campos-de-busqueda","title":"Campos de B\u00fasqueda","text":"<ul> <li>Nombre del archivo: <code>superman.cbz</code></li> <li>Ruta completa: <code>/Comics/DC/superman/</code></li> <li>T\u00edtulo catalogado: <code>Superman #1</code></li> <li>Editorial: <code>DC Comics</code></li> <li>Volumen: <code>Superman (2018)</code></li> </ul>"},{"location":"usuario/gestion-comics/#filtros-avanzados","title":"Filtros Avanzados","text":""},{"location":"usuario/gestion-comics/#filtros-de-clasificacion","title":"Filtros de Clasificaci\u00f3n","text":"<pre><code>\u25cb Todos los comics        # Mostrar todos\n\u25cb Solo clasificados       # Solo con metadata ComicVine\n\u25cb Solo sin clasificar     # Solo archivos sin catalogar\n</code></pre>"},{"location":"usuario/gestion-comics/#filtros-de-calidad","title":"Filtros de Calidad","text":"<pre><code>Calidad m\u00ednima: [\u2b50] \u2500\u2500\u2500\u2500\u25cb\u2500\u2500\u2500\u2500 [\u2b50\u2b50\u2b50\u2b50\u2b50]\nCalidad m\u00e1xima: [\u2b50] \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25cb [\u2b50\u2b50\u2b50\u2b50\u2b50]\n</code></pre>"},{"location":"usuario/gestion-comics/#filtros-de-estado","title":"Filtros de Estado","text":"<pre><code>\u2610 Incluir elementos en papelera\n\u2611\ufe0f Excluir archivos corruptos\n\u2611\ufe0f Solo archivos existentes\n</code></pre>"},{"location":"usuario/gestion-comics/#combinacion-de-filtros","title":"Combinaci\u00f3n de Filtros","text":"<pre><code># Ejemplo: Comics de alta calidad sin clasificar\n{\n    'classification': False,    # Sin clasificar\n    'quality_range': (4, 5),   # 4-5 estrellas\n    'exclude_trash': True      # No en papelera\n}\n</code></pre>"},{"location":"usuario/gestion-comics/#estadisticas-y-reportes","title":"\ud83d\udcca Estad\u00edsticas y Reportes","text":""},{"location":"usuario/gestion-comics/#informacion-de-coleccion","title":"Informaci\u00f3n de Colecci\u00f3n","text":"<pre><code>\u250c\u2500\u2500\u2500 Estad\u00edsticas Generales \u2500\u2500\u2500\u2500\u2510\n\u2502 Total de Comics: 1,247        \u2502\n\u2502 Clasificados: 892 (71.5%)     \u2502\n\u2502 Sin Clasificar: 355 (28.5%)   \u2502\n\u2502 En Papelera: 12 (1.0%)        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Distribuci\u00f3n por Calidad \u2500\u2500\u2510\n\u2502 \u2b50\u2b50\u2b50\u2b50\u2b50: 234 (18.8%)      \u2502\n\u2502 \u2b50\u2b50\u2b50\u2b50: 445 (35.7%)        \u2502\n\u2502 \u2b50\u2b50\u2b50: 312 (25.0%)          \u2502\n\u2502 \u2b50\u2b50: 178 (14.3%)            \u2502\n\u2502 \u2b50: 78 (6.3%)                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/gestion-comics/#distribucion-por-formato","title":"Distribuci\u00f3n por Formato","text":"<pre><code>\ud83d\udcd7 CBZ: 892 (71.5%)\n\ud83d\udcd8 CBR: 234 (18.8%)\n\ud83d\udcd9 PDF: 89 (7.1%)\n\ud83d\uddbc\ufe0f IMG: 32 (2.6%)\n</code></pre>"},{"location":"usuario/gestion-comics/#mantenimiento","title":"\ud83d\udee0\ufe0f Mantenimiento","text":""},{"location":"usuario/gestion-comics/#verificacion-de-integridad","title":"Verificaci\u00f3n de Integridad","text":"<pre><code># Verificar archivos faltantes\npython -c \"\nfrom db_manager import DatabaseManager\ndb = DatabaseManager()\ndb.verify_file_integrity()\n\"\n</code></pre>"},{"location":"usuario/gestion-comics/#regenerar-thumbnails","title":"Regenerar Thumbnails","text":"<pre><code># Forzar regeneraci\u00f3n de todas las miniaturas\npython -c \"\nfrom thumbnail_generator import ThumbnailGenerator\ngen = ThumbnailGenerator()\ngen.regenerate_all()\n\"\n</code></pre>"},{"location":"usuario/gestion-comics/#limpieza-de-cache","title":"Limpieza de Cache","text":"<pre><code># Limpiar thumbnails hu\u00e9rfanos\nrm -rf data/thumbnails/comics/*\n# Se regenerar\u00e1n autom\u00e1ticamente\n</code></pre>"},{"location":"usuario/gestion-comics/#consejos-y-mejores-practicas","title":"\ud83d\udca1 Consejos y Mejores Pr\u00e1cticas","text":""},{"location":"usuario/gestion-comics/#organizacion-de-archivos","title":"Organizaci\u00f3n de Archivos","text":"<pre><code>Comics/\n\u251c\u2500\u2500 DC/\n\u2502   \u251c\u2500\u2500 Batman/\n\u2502   \u2502   \u251c\u2500\u2500 Batman_001.cbz\n\u2502   \u2502   \u251c\u2500\u2500 Batman_002.cbz\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 Superman/\n\u2502       \u251c\u2500\u2500 Superman_001.cbz\n\u2502       \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 Marvel/\n    \u251c\u2500\u2500 Spider-Man/\n    \u2514\u2500\u2500 X-Men/\n</code></pre>"},{"location":"usuario/gestion-comics/#nomenclatura-recomendada","title":"Nomenclatura Recomendada","text":"<pre><code># Formato sugerido\n[Editorial]_[Serie]_[N\u00famero]_[A\u00f1o].cbz\n\n# Ejemplos\nDC_Batman_001_2023.cbz\nMarvel_Spider-Man_015_2022.cbz\nImage_Walking_Dead_193_2019.cbz\n</code></pre>"},{"location":"usuario/gestion-comics/#flujo-de-trabajo-eficiente","title":"Flujo de Trabajo Eficiente","text":"<ol> <li>Organizar archivos en directorios l\u00f3gicos</li> <li>Importar a Babelcomics4 por lotes</li> <li>Clasificar con ComicVine usando filtros</li> <li>Revisar y ajustar metadata manualmente</li> <li>Mantener backup de la base de datos</li> </ol> <p>\u00bfListo para gestionar vol\u00famenes completos? \ud83d\udc49 Gesti\u00f3n de Vol\u00famenes</p>"},{"location":"usuario/instalacion/","title":"Instalaci\u00f3n","text":"<p>Esta gu\u00eda te ayudar\u00e1 a instalar y configurar Babelcomics4 en tu sistema.</p>"},{"location":"usuario/instalacion/#requisitos-del-sistema","title":"\ud83d\udccb Requisitos del Sistema","text":""},{"location":"usuario/instalacion/#requisitos-minimos","title":"Requisitos M\u00ednimos","text":"<ul> <li>Sistema Operativo: Linux (recomendado: Ubuntu 22.04+, Fedora 38+, Arch Linux)</li> <li>Python: 3.11 o superior (probado con Python 3.13)</li> <li>RAM: 2GB m\u00ednimo, 4GB recomendado</li> <li>Almacenamiento: 500MB para la aplicaci\u00f3n + espacio para tu colecci\u00f3n</li> <li>GTK4: Versi\u00f3n 4.6 o superior</li> </ul>"},{"location":"usuario/instalacion/#requisitos-de-desarrollo","title":"Requisitos de Desarrollo","text":"<ul> <li>Git: Para clonar el repositorio</li> <li>pip: Gestor de paquetes de Python</li> <li>venv: Para entornos virtuales</li> <li>GTK4 Development: Librer\u00edas de desarrollo de GTK4</li> </ul>"},{"location":"usuario/instalacion/#instalacion-en-ubuntudebian","title":"\ud83d\udd27 Instalaci\u00f3n en Ubuntu/Debian","text":""},{"location":"usuario/instalacion/#1-actualizar-el-sistema","title":"1. Actualizar el Sistema","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"usuario/instalacion/#2-instalar-dependencias-del-sistema","title":"2. Instalar Dependencias del Sistema","text":"<pre><code># GTK4 y libadwaita\nsudo apt install libgtk-4-dev libadwaita-1-dev\n\n# Python y herramientas de desarrollo\nsudo apt install python3 python3-pip python3-venv python3-dev\n\n# Dependencias adicionales\nsudo apt install gobject-introspection libgirepository1.0-dev\n\n# Soporte para archivos RAR (opcional)\nsudo apt install unrar-free\n\n# ImageMagick (para procesamiento de iconos)\nsudo apt install imagemagick\n</code></pre>"},{"location":"usuario/instalacion/#3-clonar-el-repositorio","title":"3. Clonar el Repositorio","text":"<pre><code>cd ~/\ngit clone &lt;url-del-repositorio&gt; Babelcomics4\ncd Babelcomics4\n</code></pre>"},{"location":"usuario/instalacion/#4-crear-entorno-virtual","title":"4. Crear Entorno Virtual","text":"<pre><code>python3 -m venv .venv\nsource .venv/bin/activate\n</code></pre>"},{"location":"usuario/instalacion/#5-instalar-dependencias-python","title":"5. Instalar Dependencias Python","text":"<pre><code>pip install --upgrade pip\npip install -r requirements.txt\n</code></pre>"},{"location":"usuario/instalacion/#instalacion-en-fedora","title":"\ud83d\udd27 Instalaci\u00f3n en Fedora","text":""},{"location":"usuario/instalacion/#1-instalar-dependencias-del-sistema","title":"1. Instalar Dependencias del Sistema","text":"<pre><code># GTK4 y libadwaita\nsudo dnf install gtk4-devel libadwaita-devel\n\n# Python y herramientas\nsudo dnf install python3 python3-pip python3-devel\n\n# Dependencias adicionales\nsudo dnf install gobject-introspection-devel\n\n# Soporte RAR (opcional)\nsudo dnf install unrar\n\n# ImageMagick (para procesamiento de iconos)\nsudo dnf install ImageMagick\n</code></pre>"},{"location":"usuario/instalacion/#2-seguir-pasos-3-5-de-ubuntu","title":"2. Seguir pasos 3-5 de Ubuntu","text":""},{"location":"usuario/instalacion/#instalacion-en-arch-linux","title":"\ud83d\udd27 Instalaci\u00f3n en Arch Linux","text":""},{"location":"usuario/instalacion/#1-instalar-dependencias-del-sistema_1","title":"1. Instalar Dependencias del Sistema","text":"<pre><code># GTK4 y libadwaita\nsudo pacman -S gtk4 libadwaita\n\n# Python y herramientas\nsudo pacman -S python python-pip\n\n# Dependencias adicionales\nsudo pacman -S gobject-introspection\n\n# Soporte RAR (opcional)\nsudo pacman -S unrar\n\n# ImageMagick (para procesamiento de iconos)\nsudo pacman -S imagemagick\n</code></pre>"},{"location":"usuario/instalacion/#2-seguir-pasos-3-5-de-ubuntu_1","title":"2. Seguir pasos 3-5 de Ubuntu","text":""},{"location":"usuario/instalacion/#dependencias-python","title":"\ud83d\udce6 Dependencias Python","text":"<p>El archivo <code>requirements.txt</code> incluye todas las dependencias necesarias:</p> <pre><code># Base de datos y ORM\nsqlalchemy&gt;=2.0.0\nalembic&gt;=1.12.0\n\n# Interfaz gr\u00e1fica GTK4\npygobject&gt;=3.46.0\n\n# Procesamiento de im\u00e1genes\npillow&gt;=10.0.0\n\n# API ComicVine\nrequests&gt;=2.31.0\n\n# Compresi\u00f3n de archivos\nrarfile&gt;=4.0\n\n# Documentaci\u00f3n (opcional)\nmkdocs&gt;=1.5.0\nmkdocs-material&gt;=9.4.0\n</code></pre>"},{"location":"usuario/instalacion/#configuracion-inicial","title":"\u2699\ufe0f Configuraci\u00f3n Inicial","text":""},{"location":"usuario/instalacion/#script-de-setup-automatico-recomendado","title":"Script de Setup Autom\u00e1tico (Recomendado)","text":"<p>Babelcomics4 incluye un script de configuraci\u00f3n autom\u00e1tica que configura todo lo necesario:</p> <pre><code># Ejecutar script de setup\npython setup.py\n</code></pre> <p>El script autom\u00e1ticamente: - \u2705 Verifica dependencias del sistema - \u2705 Crea estructura de directorios necesarios - \u2705 Instala dependencias Python - \u2705 Configura la base de datos SQLite - \u2705 Instala iconos en el sistema (m\u00faltiples resoluciones) - \u2705 Crea entrada en el men\u00fa de aplicaciones - \u2705 Genera script de inicio ejecutable</p>"},{"location":"usuario/instalacion/#configuracion-manual-alternativa","title":"Configuraci\u00f3n Manual (Alternativa)","text":"<p>Si prefieres configurar manualmente:</p>"},{"location":"usuario/instalacion/#1-verificar-instalacion","title":"1. Verificar Instalaci\u00f3n","text":"<pre><code># Activar entorno virtual\nsource .venv/bin/activate\n\n# Verificar dependencias GTK4\npython -c \"import gi; gi.require_version('Gtk', '4.0'); from gi.repository import Gtk; print('GTK4 OK')\"\n\n# Verificar dependencias adicionales\npython -c \"import sqlalchemy, requests, PIL; print('Dependencias OK')\"\n</code></pre>"},{"location":"usuario/instalacion/#2-crear-directorios-necesarios","title":"2. Crear Directorios Necesarios","text":"<pre><code># Crear estructura de directorios\nmkdir -p data/thumbnails/{comics,volumes,publishers,comicbookinfo_issues}\nmkdir -p logs config backup\n</code></pre>"},{"location":"usuario/instalacion/#3-configurar-base-de-datos","title":"3. Configurar Base de Datos","text":"<pre><code># La base de datos se crea autom\u00e1ticamente en el primer inicio\n# Ubicaci\u00f3n: ./data/babelcomics.db\n</code></pre>"},{"location":"usuario/instalacion/#4-instalar-iconos-del-sistema","title":"4. Instalar Iconos del Sistema","text":"<pre><code># Crear directorios de iconos\nmkdir -p ~/.local/share/icons/hicolor/{48x48,64x64,128x128,256x256}/apps\n\n# Instalar iconos (requiere ImageMagick)\nmagick images/icon.png -resize 48x48 ~/.local/share/icons/hicolor/48x48/apps/babelcomics4.png\nmagick images/icon.png -resize 64x64 ~/.local/share/icons/hicolor/64x64/apps/babelcomics4.png\ncp images/icon.png ~/.local/share/icons/hicolor/128x128/apps/babelcomics4.png\ncp images/icon.png ~/.local/share/icons/hicolor/256x256/apps/babelcomics4.png\n\n# Actualizar cache de iconos\ngtk-update-icon-cache ~/.local/share/icons/hicolor/ || true\n</code></pre>"},{"location":"usuario/instalacion/#5-primer-inicio","title":"5. Primer Inicio","text":"<pre><code>python Babelcomic4.py\n</code></pre>"},{"location":"usuario/instalacion/#estructura-de-directorios","title":"\ud83d\uddc2\ufe0f Estructura de Directorios","text":"<p>Despu\u00e9s de la instalaci\u00f3n, tu proyecto tendr\u00e1 esta estructura:</p> <pre><code>Babelcomics4/\n\u251c\u2500\u2500 \ud83d\udcc4 Babelcomic4.py              # Aplicaci\u00f3n principal\n\u251c\u2500\u2500 \ud83d\udcc1 entidades/                  # Modelos de datos\n\u251c\u2500\u2500 \ud83d\udcc1 repositories/               # Capa de acceso a datos\n\u251c\u2500\u2500 \ud83d\udcc1 helpers/                    # Utilidades ComicVine\n\u251c\u2500\u2500 \ud83d\udcc1 data/                       # Base de datos y cache\n\u2502   \u251c\u2500\u2500 babelcomics.db            # Base de datos SQLite\n\u2502   \u2514\u2500\u2500 thumbnails/               # Cache de miniaturas\n\u2502       \u251c\u2500\u2500 comics/               # Thumbnails de archivos\n\u2502       \u251c\u2500\u2500 volumes/              # Portadas de vol\u00famenes\n\u2502       \u251c\u2500\u2500 publishers/           # Logos de editoriales\n\u2502       \u2514\u2500\u2500 comicbookinfo_issues/ # Portadas de issues\n\u251c\u2500\u2500 \ud83d\udcc1 images/                     # Recursos de interfaz\n\u2502   \u2514\u2500\u2500 icon.png                  # Icono de la aplicaci\u00f3n\n\u251c\u2500\u2500 \ud83d\udcc1 logs/                      # Archivos de registro\n\u251c\u2500\u2500 \ud83d\udcc1 config/                    # Configuraci\u00f3n personalizada\n\u251c\u2500\u2500 \ud83d\udcc1 backup/                    # Respaldos autom\u00e1ticos\n\u251c\u2500\u2500 \ud83d\udcc1 Documentacion/             # Documentaci\u00f3n MkDocs\n\u251c\u2500\u2500 \ud83d\udcc4 setup.py                   # Script de configuraci\u00f3n autom\u00e1tica\n\u251c\u2500\u2500 \ud83d\udcc4 babelcomics4.sh            # Script de inicio (generado por setup)\n\u251c\u2500\u2500 \ud83d\udcc4 requirements.txt           # Dependencias Python\n\u2514\u2500\u2500 \ud83d\udcc4 README.md                  # Informaci\u00f3n del proyecto\n</code></pre>"},{"location":"usuario/instalacion/#desarrollo","title":"\ud83d\udee0\ufe0f Desarrollo","text":""},{"location":"usuario/instalacion/#configurar-entorno-de-desarrollo","title":"Configurar Entorno de Desarrollo","text":"<pre><code># Instalar dependencias adicionales para desarrollo\npip install mkdocs mkdocs-material\n\n# Ejecutar documentaci\u00f3n en desarrollo\ncd Documentacion/Babelcomics4\nmkdocs serve\n</code></pre>"},{"location":"usuario/instalacion/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># ComicVine API (opcional, pero recomendado)\nexport COMICVINE_API_KEY=\"tu-api-key-aqui\"\n\n# Directorio de comics (opcional)\nexport COMICS_PATH=\"/ruta/a/tus/comics\"\n</code></pre>"},{"location":"usuario/instalacion/#verificacion-de-la-instalacion","title":"\ud83d\udd0d Verificaci\u00f3n de la Instalaci\u00f3n","text":""},{"location":"usuario/instalacion/#test-basico","title":"Test B\u00e1sico","text":"<pre><code># Ejecutar aplicaci\u00f3n\npython Babelcomic4.py\n\n# Deber\u00edas ver:\n# \u2713 Pango disponible\n# \u2713 Todos los archivos requeridos encontrados\n# \u2713 Base de datos encontrada\n# \u2713 Aplicaci\u00f3n creada\n</code></pre>"},{"location":"usuario/instalacion/#test-de-comicvine-opcional","title":"Test de ComicVine (Opcional)","text":"<pre><code># Con API key configurada\npython -c \"\nfrom helpers.comicvine_client import ComicVineClient;\nclient = ComicVineClient();\nprint('ComicVine OK' if client else 'ComicVine Error')\n\"\n</code></pre>"},{"location":"usuario/instalacion/#solucion-de-problemas","title":"\u2757 Soluci\u00f3n de Problemas","text":""},{"location":"usuario/instalacion/#error-no-module-named-gi","title":"Error: No module named 'gi'","text":"<pre><code># Ubuntu/Debian\nsudo apt install python3-gi python3-gi-cairo gir1.2-gtk-4.0\n\n# Fedora\nsudo dnf install python3-gobject gtk4\n\n# Arch\nsudo pacman -S python-gobject gtk4\n</code></pre>"},{"location":"usuario/instalacion/#error-gtk4-not-found","title":"Error: GTK4 not found","text":"<pre><code># Verificar instalaci\u00f3n GTK4\npkg-config --modversion gtk4\n\n# Si no est\u00e1 instalado, instalar desde repositorios del sistema\n</code></pre>"},{"location":"usuario/instalacion/#error-permission-denied-al-ejecutar","title":"Error: Permission denied al ejecutar","text":"<pre><code># Dar permisos de ejecuci\u00f3n\nchmod +x Babelcomic4.py\n\n# O ejecutar con Python directamente\npython Babelcomic4.py\n</code></pre>"},{"location":"usuario/instalacion/#base-de-datos-bloqueada","title":"Base de datos bloqueada","text":"<pre><code># Verificar que no hay otra instancia ejecut\u00e1ndose\nps aux | grep Babelcomic4\n\n# Si es necesario, eliminar archivo de lock\nrm -f data/babelcomics.db.lock\n</code></pre>"},{"location":"usuario/instalacion/#siguientes-pasos","title":"\ud83c\udfaf Siguientes Pasos","text":"<p>Una vez completada la instalaci\u00f3n:</p> <ol> <li>Primeros Pasos: Aprende lo b\u00e1sico de la interfaz</li> <li>Gesti\u00f3n de Comics: Importa tu colecci\u00f3n</li> <li>ComicVine: Configura la integraci\u00f3n con ComicVine</li> <li>Filtros: Domina el sistema de b\u00fasqueda</li> </ol> <p>\u00bfProblemas con la instalaci\u00f3n? Consulta el Troubleshooting o las FAQ.</p>"},{"location":"usuario/primeros-pasos/","title":"Primeros Pasos","text":"<p>Esta gu\u00eda te llevar\u00e1 a trav\u00e9s de los conceptos b\u00e1sicos de Babelcomics4 y te ayudar\u00e1 a empezar a gestionar tu colecci\u00f3n de comics.</p>"},{"location":"usuario/primeros-pasos/#primer-inicio","title":"\ud83d\ude80 Primer Inicio","text":""},{"location":"usuario/primeros-pasos/#ejecutar-la-aplicacion","title":"Ejecutar la Aplicaci\u00f3n","text":"<pre><code># Activar entorno virtual\nsource .venv/bin/activate\n\n# Ejecutar Babelcomics4\npython Babelcomic4.py\n</code></pre>"},{"location":"usuario/primeros-pasos/#primera-ejecucion","title":"Primera Ejecuci\u00f3n","text":"<p>En el primer inicio, Babelcomics4:</p> <ol> <li>\u2705 Crea la base de datos autom\u00e1ticamente en <code>data/babelcomics.db</code></li> <li>\u2705 Inicializa las tablas necesarias con SQLAlchemy</li> <li>\u2705 Crea directorios de cache y thumbnails</li> <li>\u2705 Configura el entorno de trabajo</li> </ol> <pre><code>\ud83d\udd0d Verificando requisitos...\n\u2713 Pango disponible\n\u2713 Todos los archivos requeridos encontrados\n\u2713 Base de datos encontrada: data/babelcomics.db\n\u2713 Aplicaci\u00f3n creada\n</code></pre>"},{"location":"usuario/primeros-pasos/#interfaz-principal","title":"\ud83d\udda5\ufe0f Interfaz Principal","text":""},{"location":"usuario/primeros-pasos/#componentes-de-la-interfaz","title":"Componentes de la Interfaz","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 [\u2261] Babelcomics4           \ud83d\udd0d Buscar...        [\u2699\ufe0f] [\ud83d\udcca]     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 [\ud83d\udcda Comics] [\ud83d\udcd6 Vol\u00famenes] [\ud83c\udfe2 Editoriales]                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510              \u2502\n\u2502  \u2502 \ud83d\udcd7  \u2502  \u2502 \ud83d\udcd8  \u2502  \u2502 \ud83d\udcd9  \u2502  \u2502 \ud83d\udcd5  \u2502  \u2502 \ud83d\udcd4  \u2502              \u2502\n\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502              \u2502\n\u2502  \u2502  1  \u2502  \u2502  2  \u2502  \u2502  3  \u2502  \u2502  4  \u2502  \u2502  5  \u2502              \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518              \u2502\n\u2502                                                             \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2510              \u2502\n\u2502  \u2502 \ud83d\udcd7  \u2502  \u2502 \ud83d\udcd8  \u2502  \u2502 \ud83d\udcd9  \u2502  \u2502 \ud83d\udcd5  \u2502  \u2502 \ud83d\udcd4  \u2502              \u2502\n\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502  \u2502Comic\u2502              \u2502\n\u2502  \u2502  6  \u2502  \u2502  7  \u2502  \u2502  8  \u2502  \u2502  9  \u2502  \u2502 10  \u2502              \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2518              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/primeros-pasos/#barra-superior","title":"Barra Superior","text":"<ul> <li>\ud83d\udd0d B\u00fasqueda: Campo de b\u00fasqueda en tiempo real</li> <li>\u2699\ufe0f Filtros: Acceso a filtros avanzados</li> <li>\ud83d\udcca Selecci\u00f3n: Modo de selecci\u00f3n m\u00faltiple</li> </ul>"},{"location":"usuario/primeros-pasos/#pestanas-de-navegacion","title":"Pesta\u00f1as de Navegaci\u00f3n","text":"<ul> <li>\ud83d\udcda Comics: Vista de comics individuales</li> <li>\ud83d\udcd6 Vol\u00famenes: Vista de series/vol\u00famenes</li> <li>\ud83c\udfe2 Editoriales: Vista de editoriales/publishers</li> </ul>"},{"location":"usuario/primeros-pasos/#vista-de-comics","title":"\ud83d\udcda Vista de Comics","text":""},{"location":"usuario/primeros-pasos/#informacion-de-las-cards","title":"Informaci\u00f3n de las Cards","text":"<p>Cada comic muestra:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   \ud83d\udcd7 Thumbnail  \u2502\n\u2502                 \u2502\n\u2502 T\u00edtulo del      \u2502\n\u2502 Comic           \u2502\n\u2502                 \u2502\n\u2502 \ud83d\udcc1 Archivo      \u2502\n\u2502 \u2b50 Calidad      \u2502\n\u2502 \ud83d\udd16 Estado       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>Thumbnail: Miniatura generada autom\u00e1ticamente</li> <li>T\u00edtulo: Nombre del archivo o t\u00edtulo catalogado</li> <li>Archivo: Ruta del archivo f\u00edsico</li> <li>Calidad: Puntuaci\u00f3n de 1-5 estrellas</li> <li>Estado: Clasificado \u2705 / Sin clasificar \u274c</li> </ul>"},{"location":"usuario/primeros-pasos/#estados-visuales","title":"Estados Visuales","text":"<ul> <li>\ud83c\udf08 Color: Comic catalogado con metadata</li> <li>\u26ab Escala de grises: Comic sin cat\u00e1logo f\u00edsico</li> <li>\ud83d\uddd1\ufe0f Papelera: Comic marcado como eliminado</li> </ul>"},{"location":"usuario/primeros-pasos/#interacciones","title":"Interacciones","text":"<ul> <li>Click simple: Seleccionar comic</li> <li>Doble click: Abrir detalles (futuro)</li> <li>Click derecho: Men\u00fa contextual</li> <li>Arrastrar: Selecci\u00f3n m\u00faltiple</li> </ul>"},{"location":"usuario/primeros-pasos/#vista-de-volumenes","title":"\ud83d\udcd6 Vista de Vol\u00famenes","text":""},{"location":"usuario/primeros-pasos/#informacion-de-volumenes","title":"Informaci\u00f3n de Vol\u00famenes","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  \ud83d\udcd6 Cover       \u2502\n\u2502                 \u2502\n\u2502 Nombre del      \u2502\n\u2502 Volumen         \u2502\n\u2502                 \u2502\n\u2502 \ud83d\udcc5 A\u00f1o          \u2502\n\u2502 \ud83d\udcca Completitud  \u2502\n\u2502 \ud83d\udd22 Issues       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <ul> <li>Cover: Portada oficial del volumen</li> <li>Nombre: T\u00edtulo oficial del volumen</li> <li>A\u00f1o: A\u00f1o de publicaci\u00f3n</li> <li>Completitud: Porcentaje de issues que posees</li> <li>Issues: Cantidad total de n\u00fameros</li> </ul>"},{"location":"usuario/primeros-pasos/#navegacion-a-detalle","title":"Navegaci\u00f3n a Detalle","text":"<p>Al hacer doble click en un volumen:</p> <ol> <li>Navegaci\u00f3n: Se abre la p\u00e1gina de detalle</li> <li>Lista de Issues: Todos los n\u00fameros del volumen</li> <li>Metadatos: Informaci\u00f3n completa de ComicVine</li> <li>Acciones: Bot\u00f3n de actualizaci\u00f3n ComicVine</li> </ol>"},{"location":"usuario/primeros-pasos/#sistema-de-busqueda","title":"\ud83d\udd0d Sistema de B\u00fasqueda","text":""},{"location":"usuario/primeros-pasos/#busqueda-basica","title":"B\u00fasqueda B\u00e1sica","text":"<pre><code>\ud83d\udd0d [Buscar comics, vol\u00famenes, editoriales...]\n</code></pre> <ul> <li>Tiempo real: Resultados mientras escribes</li> <li>Multi-campo: Busca en t\u00edtulos, archivos, metadatos</li> <li>Sensible a contexto: Seg\u00fan la pesta\u00f1a activa</li> </ul>"},{"location":"usuario/primeros-pasos/#ejemplos-de-busqueda","title":"Ejemplos de B\u00fasqueda","text":"<pre><code># Buscar por t\u00edtulo\nSuperman\n\n# Buscar por archivo\n.cbz\n\n# Buscar por editorial\nMarvel\n\n# Buscar por a\u00f1o\n2023\n</code></pre>"},{"location":"usuario/primeros-pasos/#filtros-avanzados","title":"\u2699\ufe0f Filtros Avanzados","text":""},{"location":"usuario/primeros-pasos/#acceder-a-filtros","title":"Acceder a Filtros","text":"<ol> <li>Click en el bot\u00f3n \u2699\ufe0f de la barra superior</li> <li>Se abre el di\u00e1logo de \"Filtros Avanzados\"</li> <li>Configurar criterios seg\u00fan la vista activa</li> </ol>"},{"location":"usuario/primeros-pasos/#filtros-para-comics","title":"Filtros para Comics","text":"<pre><code>\u250c\u2500\u2500\u2500 Estado de Clasificaci\u00f3n \u2500\u2500\u2500\u2510\n\u2502 \u25cb Todos los comics            \u2502\n\u2502 \u25cb Solo clasificados           \u2502\n\u2502 \u25cb Solo sin clasificar         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Calidad del Archivo \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 M\u00ednima: [0] \u2b50                \u2502\n\u2502 M\u00e1xima: [5] \u2b50                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Estado del Archivo \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2610 Incluir elementos en        \u2502\n\u2502   papelera                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/primeros-pasos/#filtros-para-volumenes","title":"Filtros para Vol\u00famenes","text":"<pre><code>\u250c\u2500\u2500\u2500 A\u00f1o de Publicaci\u00f3n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Desde: [1900]                 \u2502\n\u2502 Hasta: [2024]                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Cantidad de N\u00fameros \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 M\u00ednimo: [0]                   \u2502\n\u2502 M\u00e1ximo: [1000]                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500 Estado de Colecci\u00f3n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u25bc Todos los vol\u00famenes         \u2502\n\u2502   Colecci\u00f3n completa (100%)   \u2502\n\u2502   Mayor\u00eda completa (&gt;75%)     \u2502\n\u2502   Parcialmente completa       \u2502\n\u2502   Pocos n\u00fameros (&lt;25%)        \u2502\n\u2502   Sin comics (0%)             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/primeros-pasos/#modo-seleccion","title":"\ud83d\udcca Modo Selecci\u00f3n","text":""},{"location":"usuario/primeros-pasos/#activar-seleccion-multiple","title":"Activar Selecci\u00f3n M\u00faltiple","text":"<ol> <li>Click en el bot\u00f3n \ud83d\udcca de la barra superior</li> <li>Las cards cambian a modo selecci\u00f3n</li> <li>Click en cards para seleccionar/deseleccionar</li> </ol>"},{"location":"usuario/primeros-pasos/#acciones-en-lote","title":"Acciones en Lote","text":"<pre><code>\u250c\u2500\u2500\u2500 Acciones Disponibles \u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\uddd1\ufe0f Mover a Papelera          \u2502\n\u2502 \ud83d\udcdd Editar Metadatos           \u2502\n\u2502 \ud83d\udd04 Actualizar desde ComicVine \u2502\n\u2502 \ud83d\udcc1 Cambiar Ubicaci\u00f3n          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usuario/primeros-pasos/#flujo-de-trabajo-basico","title":"\ud83c\udfaf Flujo de Trabajo B\u00e1sico","text":""},{"location":"usuario/primeros-pasos/#1-importar-comics","title":"1. Importar Comics","text":"<pre><code>graph LR\n    A[Agregar Comics] --&gt; B[Escaneo Autom\u00e1tico]\n    B --&gt; C[Generar Thumbnails]\n    C --&gt; D[Vista Principal]\n</code></pre>"},{"location":"usuario/primeros-pasos/#2-catalogar-con-comicvine","title":"2. Catalogar con ComicVine","text":"<pre><code>graph LR\n    A[Seleccionar Comic] --&gt; B[Buscar en ComicVine]\n    B --&gt; C[Asociar con Issue]\n    C --&gt; D[Descargar Metadata]\n    D --&gt; E[Actualizar BD]\n</code></pre>"},{"location":"usuario/primeros-pasos/#3-organizar-coleccion","title":"3. Organizar Colecci\u00f3n","text":"<pre><code>graph LR\n    A[Aplicar Filtros] --&gt; B[Buscar Comics]\n    B --&gt; C[Seleccionar M\u00faltiples]\n    C --&gt; D[Acciones en Lote]\n</code></pre>"},{"location":"usuario/primeros-pasos/#personalizacion","title":"\ud83c\udfa8 Personalizaci\u00f3n","text":""},{"location":"usuario/primeros-pasos/#temas","title":"Temas","text":"<ul> <li>Claro: Tema predeterminado</li> <li>Oscuro: Activaci\u00f3n autom\u00e1tica seg\u00fan sistema</li> <li>Adaptativo: Sigue configuraci\u00f3n del sistema</li> </ul>"},{"location":"usuario/primeros-pasos/#directorios","title":"Directorios","text":"<pre><code># Estructura de datos\ndata/\n\u251c\u2500\u2500 babelcomics.db          # Base de datos principal\n\u251c\u2500\u2500 thumbnails/             # Cache de miniaturas\n\u2502   \u251c\u2500\u2500 comics/            # Thumbnails de comics\n\u2502   \u251c\u2500\u2500 volumes/           # Thumbnails de vol\u00famenes\n\u2502   \u2514\u2500\u2500 comicbookinfo_issues/ # Thumbnails de issues\n\u2514\u2500\u2500 backups/               # Respaldos autom\u00e1ticos\n</code></pre>"},{"location":"usuario/primeros-pasos/#configuracion-inicial","title":"\ud83d\udd27 Configuraci\u00f3n Inicial","text":""},{"location":"usuario/primeros-pasos/#directorios-de-comics","title":"Directorios de Comics","text":"<p>Por defecto, Babelcomics4 busca comics en: - Directorio actual del proyecto - Directorios especificados en variables de entorno - Rutas configuradas en la aplicaci\u00f3n</p>"},{"location":"usuario/primeros-pasos/#api-comicvine-opcional","title":"API ComicVine (Opcional)","text":"<pre><code># Configurar API key\nexport COMICVINE_API_KEY=\"tu-clave-aqui\"\n\n# O configurar en la aplicaci\u00f3n\n</code></pre>"},{"location":"usuario/primeros-pasos/#estadisticas","title":"\ud83d\udcc8 Estad\u00edsticas","text":""},{"location":"usuario/primeros-pasos/#panel-de-informacion","title":"Panel de Informaci\u00f3n","text":"<p>La aplicaci\u00f3n te muestra: - Total de comics: Cantidad en tu colecci\u00f3n - Clasificados: Comics con metadata completa - Sin clasificar: Comics pendientes de catalogar - Vol\u00famenes: Series en tu colecci\u00f3n - Completitud: Porcentaje medio de colecciones</p>"},{"location":"usuario/primeros-pasos/#proximos-pasos","title":"\ud83c\udfaf Pr\u00f3ximos Pasos","text":"<p>Ahora que conoces lo b\u00e1sico:</p> <ol> <li>Gesti\u00f3n de Comics: Importa y organiza tu colecci\u00f3n</li> <li>Gesti\u00f3n de Vol\u00famenes: Trabaja con series completas</li> <li>Filtros y B\u00fasqueda: Encuentra comics espec\u00edficos</li> <li>Integraci\u00f3n ComicVine: Automatiza la catalogaci\u00f3n</li> </ol>"},{"location":"usuario/primeros-pasos/#consejos-utiles","title":"\ud83d\udca1 Consejos \u00datiles","text":""},{"location":"usuario/primeros-pasos/#atajos-de-teclado","title":"Atajos de Teclado","text":"<ul> <li>Ctrl+F: Enfocar b\u00fasqueda</li> <li>Escape: Salir de modo selecci\u00f3n</li> <li>Ctrl+A: Seleccionar todos (en modo selecci\u00f3n)</li> </ul>"},{"location":"usuario/primeros-pasos/#mejores-practicas","title":"Mejores Pr\u00e1cticas","text":"<ol> <li>Organiza archivos: Usa nombres descriptivos</li> <li>Usa ComicVine: Para metadata autom\u00e1tica</li> <li>Aplica filtros: Para encontrar comics espec\u00edficos</li> <li>Backup regular: Protege tu base de datos</li> </ol> <p>\u00bfListo para organizar tu colecci\u00f3n? \ud83d\udc49 Gesti\u00f3n de Comics</p>"}]}